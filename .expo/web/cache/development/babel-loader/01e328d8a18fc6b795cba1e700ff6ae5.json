{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Icon = _interopRequireWildcard(require(\"./Icon\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/CrossFadeIcon.tsx\";\n\nvar CrossFadeIcon = function (_React$Component) {\n  (0, _inherits2.default)(CrossFadeIcon, _React$Component);\n\n  function CrossFadeIcon() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CrossFadeIcon);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CrossFadeIcon)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      currentIcon: _this.props.source,\n      previousIcon: null,\n      fade: new _reactNative.Animated.Value(1)\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(CrossFadeIcon, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_, prevState) {\n      var previousIcon = this.state.previousIcon;\n      var scale = this.props.theme.animation.scale;\n\n      if (!(0, _Icon.isValidIcon)(previousIcon) || (0, _Icon.isEqualIcon)(previousIcon, prevState.previousIcon)) {\n        return;\n      }\n\n      this.state.fade.setValue(1);\n\n      _reactNative.Animated.timing(this.state.fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: false\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          size = _this$props.size;\n      var opacityPrev = this.state.fade;\n      var opacityNext = this.state.previousIcon ? this.state.fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      }) : 1;\n      var rotatePrev = this.state.fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['-90deg', '0deg']\n      });\n      var rotateNext = this.state.previousIcon ? this.state.fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg']\n      }) : '0deg';\n      return React.createElement(_reactNative.View, {\n        style: [styles.content, {\n          height: size,\n          width: size\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, this.state.previousIcon ? React.createElement(_reactNative.Animated.View, {\n        style: [styles.icon, {\n          opacity: opacityPrev,\n          transform: [{\n            rotate: rotatePrev\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, React.createElement(_Icon.default, {\n        source: this.state.previousIcon,\n        size: size,\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        }\n      })) : null, React.createElement(_reactNative.Animated.View, {\n        style: [styles.icon, {\n          opacity: opacityNext,\n          transform: [{\n            rotate: rotateNext\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        }\n      }, React.createElement(_Icon.default, {\n        source: this.state.currentIcon,\n        size: size,\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, nextState) {\n      if (nextState.currentIcon === nextProps.source) {\n        return null;\n      }\n\n      return {\n        currentIcon: nextProps.source,\n        previousIcon: nextState.currentIcon\n      };\n    }\n  }]);\n  return CrossFadeIcon;\n}(React.Component);\n\nvar _default = (0, _theming.withTheme)(CrossFadeIcon);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["CrossFadeIcon","React","Component","nextProps","nextState","currentIcon","previousIcon","fade","Animated","_","prevState","scale","duration","toValue","useNativeDriver","color","size","opacityPrev","opacityNext","inputRange","outputRange","rotatePrev","rotateNext","styles","height","width","opacity","transform","rotate","StyleSheet","content","alignItems","justifyContent","icon","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon, IconSource } from './Icon';\n\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  currentIcon: IconSource;\n  previousIcon: IconSource | null;\n  fade: Animated.Value;\n};\n\nclass CrossFadeIcon extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, nextState: State) {\n    if (nextState.currentIcon === nextProps.source) {\n      return null;\n    }\n\n    return {\n      currentIcon: nextProps.source,\n      previousIcon: nextState.currentIcon,\n    };\n  }\n\n  state: State = {\n    currentIcon: this.props.source,\n    previousIcon: null,\n    fade: new Animated.Value(1),\n  };\n\n  componentDidUpdate(_: Props, prevState: State) {\n    const { previousIcon } = this.state;\n    const {\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n\n    if (\n      !isValidIcon(previousIcon) ||\n      isEqualIcon(previousIcon, prevState.previousIcon)\n    ) {\n      return;\n    }\n\n    this.state.fade.setValue(1);\n\n    Animated.timing(this.state.fade, {\n      duration: scale * 200,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  }\n\n  render() {\n    const { color, size } = this.props;\n    const opacityPrev = this.state.fade;\n    const opacityNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0],\n        })\n      : 1;\n\n    const rotatePrev = this.state.fade.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['-90deg', '0deg'],\n    });\n\n    const rotateNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '-180deg'],\n        })\n      : '0deg';\n\n    return (\n      <View\n        style={[\n          styles.content,\n          {\n            height: size,\n            width: size,\n          },\n        ]}\n      >\n        {this.state.previousIcon ? (\n          <Animated.View\n            style={[\n              styles.icon,\n              {\n                opacity: opacityPrev,\n                transform: [{ rotate: rotatePrev }],\n              },\n            ]}\n          >\n            <Icon source={this.state.previousIcon} size={size} color={color} />\n          </Animated.View>\n        ) : null}\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityNext,\n              transform: [{ rotate: rotateNext }],\n            },\n          ]}\n        >\n          <Icon source={this.state.currentIcon} size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}