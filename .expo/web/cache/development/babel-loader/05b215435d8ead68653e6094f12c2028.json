{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ToggleButtonGroupContext = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/ToggleButton/ToggleButtonGroup.tsx\";\nvar ToggleButtonGroupContext = React.createContext(null);\nexports.ToggleButtonGroupContext = ToggleButtonGroupContext;\n\nvar ToggleButtonGroup = function (_React$Component) {\n  (0, _inherits2.default)(ToggleButtonGroup, _React$Component);\n\n  function ToggleButtonGroup() {\n    (0, _classCallCheck2.default)(this, ToggleButtonGroup);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToggleButtonGroup).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(ToggleButtonGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          onValueChange = _this$props.onValueChange,\n          children = _this$props.children;\n      return React.createElement(ToggleButtonGroupContext.Provider, {\n        value: {\n          value: value,\n          onValueChange: onValueChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, children);\n    }\n  }]);\n  return ToggleButtonGroup;\n}(React.Component);\n\n(0, _defineProperty2.default)(ToggleButtonGroup, \"displayName\", 'ToggleButton.Group');\nvar _default = ToggleButtonGroup;\nexports.default = _default;","map":{"version":3,"sources":["ToggleButtonGroup.tsx"],"names":["ToggleButtonGroupContext","React","ToggleButtonGroup","Component","value","onValueChange","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;AAsBO,IAAMA,wBAAwB,GAAGC,KAAK,CAALA,aAAAA,CAAjC,IAAiCA,CAAjC;;;AAiCDC,IAAAA,iB;;;;;;;;;;6BAGK;AAAA,UAAA,WAAA,GACoC,KADpC,KAAA;AAAA,UACCE,KADD,GAAA,WAAA,CAAA,KAAA;AAAA,UACQC,aADR,GAAA,WAAA,CAAA,aAAA;AAAA,UACuBC,QADvB,GAAA,WAAA,CAAA,QAAA;AAGP,aACE,KAAA,CAAA,aAAA,CAAC,wBAAD,CAAA,QAAA,EAAA;AACE,QAAA,KAAK,EAAE;AACLF,UAAAA,KAAK,EADA,KAAA;AAELC,UAAAA,aAAa,EAHjB;AACS,SADT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EADF,QACE,CADF;;;;EAN4BJ,KAAK,CAACE,S,CAAhCD;;8BAAAA,iB,iBACiB,oB;eAkBRA,iB","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n};\n\ntype ToggleButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const ToggleButtonGroupContext = React.createContext<\n  ToggleButtonContextType\n>(null as any);\n\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, checkout <a href=\"/toggle-button-row.html\">`ToggleButton.Row`</a>.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { ToggleButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'left',\n *   };\n *\n *   render() {\n *     return(\n *       <ToggleButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *           <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *           <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *       </ToggleButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass ToggleButtonGroup extends React.Component<Props> {\n  static displayName = 'ToggleButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <ToggleButtonGroupContext.Provider\n        value={{\n          value,\n          onValueChange,\n        }}\n      >\n        {children}\n      </ToggleButtonGroupContext.Provider>\n    );\n  }\n}\n\nexport default ToggleButtonGroup;\n"]},"metadata":{},"sourceType":"script"}