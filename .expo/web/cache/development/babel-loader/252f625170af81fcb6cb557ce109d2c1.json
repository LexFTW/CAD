{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _reactNativeSafeAreaView = _interopRequireDefault(require(\"react-native-safe-area-view\"));\n\nvar _Surface = _interopRequireDefault(require(\"./Surface\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Modal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar DEFAULT_DURATION = 220;\n\nvar Modal = function (_React$Component) {\n  (0, _inherits2.default)(Modal, _React$Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      opacity: new _reactNative.Animated.Value(_this.props.visible ? 1 : 0),\n      rendered: _this.props.visible\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleBack\", function () {\n      if (_this.props.dismissable) {\n        _this.hideModal();\n      }\n\n      return true;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"showModal\", function () {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', _this.handleBack);\n\n      _reactNative.BackHandler.addEventListener('hardwareBackPress', _this.handleBack);\n\n      var opacity = _this.state.opacity;\n      var scale = _this.props.theme.animation.scale;\n\n      _reactNative.Animated.timing(opacity, {\n        toValue: 1,\n        duration: scale * DEFAULT_DURATION,\n        easing: _reactNative.Easing.out(_reactNative.Easing.cubic),\n        useNativeDriver: true\n      }).start();\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"hideModal\", function () {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', _this.handleBack);\n\n      var opacity = _this.state.opacity;\n      var scale = _this.props.theme.animation.scale;\n\n      _reactNative.Animated.timing(opacity, {\n        toValue: 0,\n        duration: scale * DEFAULT_DURATION,\n        easing: _reactNative.Easing.out(_reactNative.Easing.cubic),\n        useNativeDriver: true\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (!finished) {\n          return;\n        }\n\n        if (_this.props.visible && _this.props.onDismiss) {\n          _this.props.onDismiss();\n        }\n\n        if (_this.props.visible) {\n          _this.showModal();\n        } else {\n          _this.setState({\n            rendered: false\n          });\n        }\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(Modal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        if (this.props.visible) {\n          this.showModal();\n        } else {\n          this.hideModal();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          opacity = _this$state.opacity;\n      if (!rendered) return null;\n      var _this$props = this.props,\n          children = _this$props.children,\n          dismissable = _this$props.dismissable,\n          theme = _this$props.theme,\n          contentContainerStyle = _this$props.contentContainerStyle;\n      var colors = theme.colors;\n      return React.createElement(_reactNative.Animated.View, {\n        pointerEvents: this.props.visible ? 'auto' : 'none',\n        accessibilityViewIsModal: true,\n        accessibilityLiveRegion: \"polite\",\n        style: _reactNative.StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        }\n      }, React.createElement(_reactNative.TouchableWithoutFeedback, {\n        disabled: !dismissable,\n        onPress: dismissable ? this.hideModal : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        }\n      }, React.createElement(_reactNative.Animated.View, {\n        style: [styles.backdrop, {\n          backgroundColor: colors.backdrop,\n          opacity: opacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      })), React.createElement(_reactNativeSafeAreaView.default, {\n        style: styles.wrapper,\n        pointerEvents: \"box-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        }\n      }, React.createElement(_Surface.default, {\n        style: [{\n          opacity: opacity\n        }, styles.content, contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }, children)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return Modal;\n}(React.Component);\n\n(0, _defineProperty2.default)(Modal, \"defaultProps\", {\n  dismissable: true,\n  visible: false\n});\n\nvar _default = (0, _theming.withTheme)(Modal);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["Modal.tsx"],"names":["DEFAULT_DURATION","Modal","React","Component","dismissable","visible","nextProps","prevState","rendered","opacity","Animated","prevProps","BackHandler","scale","toValue","duration","easing","Easing","useNativeDriver","finished","children","theme","contentContainerStyle","colors","StyleSheet","styles","backgroundColor","backdrop","flex","wrapper","justifyContent","content"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  BackHandler,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  ViewStyle,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  opacity: Animated.Value;\n  rendered: boolean;\n};\n\nconst DEFAULT_DURATION = 220;\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _showModal = () => this.setState({ visible: true });\n *   _hideModal = () => this.setState({ visible: false });\n *\n *   render() {\n *     const { visible } = this.state;\n *     return (\n *       <Provider>\n *          <Portal>\n *            <Modal visible={visible} onDismiss={this._hideModal}>\n *              <Text>Example Modal</Text>\n *            </Modal>\n *            <Button\n *              style={{ marginTop: 30 }}\n *              onPress={this._showModal}\n *            >\n *              Show\n *            </Button>\n *          </Portal>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\n\nclass Modal extends React.Component<Props, State> {\n  static defaultProps = {\n    dismissable: true,\n    visible: false,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return {\n        rendered: true,\n      };\n    }\n\n    return null;\n  }\n\n  state = {\n    opacity: new Animated.Value(this.props.visible ? 1 : 0),\n    rendered: this.props.visible,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      if (this.props.visible) {\n        this.showModal();\n      } else {\n        this.hideModal();\n      }\n    }\n  }\n\n  private handleBack = () => {\n    if (this.props.dismissable) {\n      this.hideModal();\n    }\n    return true;\n  };\n\n  private showModal = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\n    BackHandler.addEventListener('hardwareBackPress', this.handleBack);\n\n    const { opacity } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  private hideModal = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\n\n    const { opacity } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n\n      if (this.props.visible && this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n\n      if (this.props.visible) {\n        this.showModal();\n      } else {\n        this.setState({\n          rendered: false,\n        });\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\n  }\n\n  render() {\n    const { rendered, opacity } = this.state;\n\n    if (!rendered) return null;\n\n    const { children, dismissable, theme, contentContainerStyle } = this.props;\n    const { colors } = theme;\n    return (\n      <Animated.View\n        pointerEvents={this.props.visible ? 'auto' : 'none'}\n        accessibilityViewIsModal\n        accessibilityLiveRegion=\"polite\"\n        style={StyleSheet.absoluteFill}\n      >\n        <TouchableWithoutFeedback\n          disabled={!dismissable}\n          onPress={dismissable ? this.hideModal : undefined}\n        >\n          <Animated.View\n            style={[\n              styles.backdrop,\n              { backgroundColor: colors.backdrop, opacity },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView style={styles.wrapper} pointerEvents=\"box-none\">\n          <Surface\n            style={\n              [{ opacity }, styles.content, contentContainerStyle] as StyleProp<\n                ViewStyle\n              >\n            }\n          >\n            {children}\n          </Surface>\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nexport default withTheme(Modal);\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}