{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _Portal = _interopRequireDefault(require(\"../Portal/Portal\"));\n\nvar _Surface = _interopRequireDefault(require(\"../Surface\"));\n\nvar _MenuItem2 = _interopRequireDefault(require(\"./MenuItem\"));\n\nvar _constants = require(\"../../constants\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Menu/Menu.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\n\nvar EASING = _reactNative.Easing.bezier(0.4, 0, 0.2, 1);\n\nvar Menu = function (_React$Component) {\n  (0, _inherits2.default)(Menu, _React$Component);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      rendered: _this.props.visible,\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new _reactNative.Animated.Value(0),\n      scaleAnimation: new _reactNative.Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"anchor\", null);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"menu\", null);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"isAnchorCoord\", function () {\n      return !React.isValidElement(_this.props.anchor);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"measureMenuLayout\", function () {\n      return new Promise(function (resolve) {\n        if (_this.menu) {\n          _this.menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"measureAnchorLayout\", function () {\n      return new Promise(function (resolve) {\n        var anchor = _this.props.anchor;\n\n        if (_this.isAnchorCoord()) {\n          resolve({\n            x: anchor.x,\n            y: anchor.y,\n            width: 0,\n            height: 0\n          });\n          return;\n        }\n\n        if (_this.anchor) {\n          _this.anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"updateVisibility\", function _callee() {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(Promise.resolve());\n\n            case 2:\n              if (_this.props.visible) {\n                _this.show();\n              } else {\n                _this.hide();\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"isBrowser\", function () {\n      return _reactNative.Platform.OS === 'web' && 'document' in global;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"focusFirstDOMNode\", function (el) {\n      if (el && _this.isBrowser()) {\n        var node = (0, _reactNative.findNodeHandle)(el);\n        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        focusableNode === null || focusableNode === void 0 ? void 0 : focusableNode.focus();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleDismiss\", function () {\n      if (_this.props.visible) {\n        _this.props.onDismiss();\n      }\n\n      return true;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleKeypress\", function (e) {\n      if (e.key === 'Escape') {\n        _this.props.onDismiss();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attachListeners\", function () {\n      _reactNative.BackHandler.addEventListener('hardwareBackPress', _this.handleDismiss);\n\n      _reactNative.Dimensions.addEventListener('change', _this.handleDismiss);\n\n      _this.isBrowser() && document.addEventListener('keyup', _this.handleKeypress);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"removeListeners\", function () {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', _this.handleDismiss);\n\n      _reactNative.Dimensions.removeEventListener('change', _this.handleDismiss);\n\n      _this.isBrowser() && document.removeEventListener('keyup', _this.handleKeypress);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"show\", function _callee2() {\n      var windowLayout, _ref, _ref2, menuLayout, anchorLayout;\n\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              windowLayout = _reactNative.Dimensions.get('window');\n              _context2.next = 3;\n              return _regenerator.default.awrap(Promise.all([_this.measureMenuLayout(), _this.measureAnchorLayout()]));\n\n            case 3:\n              _ref = _context2.sent;\n              _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n              menuLayout = _ref2[0];\n              anchorLayout = _ref2[1];\n\n              if (!(!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this.isAnchorCoord() || !anchorLayout.height && !_this.isAnchorCoord())) {\n                _context2.next = 10;\n                break;\n              }\n\n              requestAnimationFrame(_this.show);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState(function () {\n                return {\n                  left: anchorLayout.x,\n                  top: anchorLayout.y,\n                  anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width\n                  },\n                  menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height\n                  }\n                };\n              }, function () {\n                _this.attachListeners();\n\n                var animation = _this.props.theme.animation;\n\n                _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), _reactNative.Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start(function (_ref3) {\n                  var finished = _ref3.finished;\n\n                  if (finished) {\n                    _this.focusFirstDOMNode(_this.menu);\n                  }\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"hide\", function () {\n      _this.removeListeners();\n\n      var animation = _this.props.theme.animation;\n\n      _reactNative.Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION * animation.scale,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (finished) {\n        if (finished) {\n          _this.setState({\n            menuLayout: {\n              width: 0,\n              height: 0\n            },\n            rendered: false\n          });\n\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this.focusFirstDOMNode(_this.anchor);\n        }\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          anchor = _this$props.anchor,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          statusBarHeight = _this$props.statusBarHeight,\n          onDismiss = _this$props.onDismiss;\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n\n      var additionalVerticalValue = _reactNative.Platform.select({\n        android: statusBarHeight,\n        default: 0\n      });\n\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n\n      var windowLayout = _reactNative.Dimensions.get('window');\n\n      var positionTransforms = [];\n\n      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right > windowLayout.width - SCREEN_INDENT) {\n          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      var scrollableMenuHeight = 0;\n\n      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {\n        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n      }\n\n      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;\n\n      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]\n          })\n        });\n\n        if (top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]\n          })\n        });\n        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n        if (bottom > windowLayout.height - SCREEN_INDENT) {\n          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = _objectSpread({\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: theme.roundness\n      }, scrollableMenuHeight ? {\n        height: scrollableMenuHeight\n      } : {});\n\n      var positionStyle = _objectSpread({\n        top: this.isAnchorCoord() ? top : top + additionalVerticalValue\n      }, _reactNative.I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return React.createElement(_reactNative.View, {\n        ref: function ref(_ref5) {\n          _this2.anchor = _ref5;\n        },\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        }\n      }, this.isAnchorCoord() ? null : anchor, rendered ? React.createElement(_Portal.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        }\n      }, React.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        }\n      }, React.createElement(_reactNative.View, {\n        style: _reactNative.StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        }\n      })), React.createElement(_reactNative.View, {\n        ref: function ref(_ref4) {\n          _this2.menu = _ref4;\n        },\n        collapsable: false,\n        accessibilityViewIsModal: visible,\n        style: [styles.wrapper, positionStyle, style],\n        pointerEvents: visible ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        }\n      }, React.createElement(_reactNative.Animated.View, {\n        style: {\n          transform: positionTransforms\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        }\n      }, React.createElement(_Surface.default, {\n        style: [styles.shadowMenuContainer, shadowMenuContainerStyle, contentStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        }\n      }, scrollableMenuHeight && React.createElement(_reactNative.ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        }\n      }, children) || React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        }\n      }, children))))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return Menu;\n}(React.Component);\n\n(0, _defineProperty2.default)(Menu, \"Item\", _MenuItem2.default);\n(0, _defineProperty2.default)(Menu, \"defaultProps\", {\n  statusBarHeight: _constants.APPROX_STATUSBAR_HEIGHT\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Menu);\n\nexports.default = _default;","map":{"version":3,"sources":["Menu.tsx"],"names":["SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","Menu","React","Component","MenuItem","statusBarHeight","APPROX_STATUSBAR_HEIGHT","nextProps","prevState","rendered","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","scaleAnimation","x","y","prevProps","resolve","anchor","Promise","Platform","el","node","focusableNode","e","BackHandler","Dimensions","document","windowLayout","requestAnimationFrame","animation","toValue","duration","easing","useNativeDriver","finished","visible","contentStyle","style","children","theme","onDismiss","additionalVerticalValue","android","default","scaleTransforms","scaleX","inputRange","outputRange","scaleY","positionTransforms","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","positionStyle","I18nManager","StyleSheet","styles","wrapper","position","shadowMenuContainer","paddingVertical","elevation"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Animated,\n  BackHandler,\n  Dimensions,\n  Easing,\n  I18nManager,\n  LayoutRectangle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  ScrollView,\n  findNodeHandle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport { Theme, $Omit } from '../../types';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport MenuItem, { MenuItem as _MenuItem } from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean;\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n   */\n  anchor: React.ReactNode | { x: number; y: number };\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight?: number;\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style of menu's inner content.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype Layout = $Omit<$Omit<LayoutRectangle, 'x'>, 'y'>;\n\ntype State = {\n  rendered: boolean;\n  top: number;\n  left: number;\n  menuLayout: Layout;\n  anchorLayout: Layout;\n  opacityAnimation: Animated.Value;\n  scaleAnimation: Animated.ValueXY;\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _openMenu = () => this.setState({ visible: true });\n *\n *   _closeMenu = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Provider>\n *         <View\n *           style={{\n *             paddingTop: 50,\n *             flexDirection: 'row',\n *             justifyContent: 'center'\n *           }}>\n *           <Menu\n *             visible={this.state.visible}\n *             onDismiss={this._closeMenu}\n *             anchor={\n *               <Button onPress={this._openMenu}>Show menu</Button>\n *             }\n *           >\n *             <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *             <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *             <Divider />\n *             <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *           </Menu>\n *         </View>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.tsx\n  static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  private anchor?: View | null = null;\n  private menu?: View | null = null;\n\n  private isAnchorCoord = () => !React.isValidElement(this.props.anchor);\n\n  private measureMenuLayout = () =>\n    new Promise<LayoutRectangle>(resolve => {\n      if (this.menu) {\n        this.menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private measureAnchorLayout = () =>\n    new Promise<LayoutRectangle>(resolve => {\n      const { anchor } = this.props;\n      if (this.isAnchorCoord()) {\n        // @ts-ignore\n        resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n        return;\n      }\n\n      if (this.anchor) {\n        this.anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private isBrowser = () => Platform.OS === 'web' && 'document' in global;\n\n  private focusFirstDOMNode = (el: View | null | undefined) => {\n    if (el && this.isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      focusableNode?.focus();\n    }\n  };\n\n  private handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss();\n    }\n    return true;\n  };\n\n  private handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss();\n    }\n  };\n\n  private attachListeners = () => {\n    BackHandler.addEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.addEventListener('change', this.handleDismiss);\n\n    this.isBrowser() && document.addEventListener('keyup', this.handleKeypress);\n  };\n\n  private removeListeners = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.removeEventListener('change', this.handleDismiss);\n\n    this.isBrowser() &&\n      document.removeEventListener('keyup', this.handleKeypress);\n  };\n\n  private show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this.measureMenuLayout(),\n      this.measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      (!anchorLayout.width && !this.isAnchorCoord()) ||\n      (!anchorLayout.height && !this.isAnchorCoord())\n    ) {\n      requestAnimationFrame(this.show);\n      return;\n    }\n\n    this.setState(\n      () => ({\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      }),\n      () => {\n        this.attachListeners();\n\n        const { animation } = this.props.theme;\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this.focusFirstDOMNode(this.menu);\n          }\n        });\n      }\n    );\n  };\n\n  private hide = () => {\n    this.removeListeners();\n\n    const { animation } = this.props.theme;\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION * animation.scale,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(finished => {\n      if (finished) {\n        this.setState({ menuLayout: { width: 0, height: 0 }, rendered: false });\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this.focusFirstDOMNode(this.anchor);\n      }\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      anchor,\n      contentStyle,\n      style,\n      children,\n      theme,\n      statusBarHeight,\n      onDismiss,\n    } = this.props;\n\n    const {\n      rendered,\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n    } = this.state;\n\n    let { left, top } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    const windowLayout = Dimensions.get('window');\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right > windowLayout.width - SCREEN_INDENT) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // If the menu is larger than available vertical space,\n    // calculate the height of scrollable view\n    let scrollableMenuHeight = 0;\n\n    // Check if the menu should be scrollable\n    if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And bottom side of the screen has more space than top side\n      top <= windowLayout.height - top\n    ) {\n      // Scrollable menu should be below the anchor (expands downwards)\n      scrollableMenuHeight =\n        windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n    } else if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And top side of the screen has more space than bottom side\n      top >= windowLayout.height - top &&\n      // And menu overflows from top side\n      top <=\n        menuLayout.height -\n          anchorLayout.height +\n          SCREEN_INDENT -\n          additionalVerticalValue\n    ) {\n      // Scrollable menu should be above the anchor (expands upwards)\n      scrollableMenuHeight =\n        top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n    }\n\n    // Scrollable menu max height\n    scrollableMenuHeight =\n      scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n        ? windowLayout.height - 2 * SCREEN_INDENT\n        : scrollableMenuHeight;\n\n    // Menu is typically positioned below the element that generates it\n    // So first check if it fits below the anchor (expands downwards)\n    if (\n      // Check if menu fits vertically\n      top <=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue ||\n      // Or if the menu overflows from bottom side\n      (top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n        // And bottom side of the screen has more space than top side\n        top <= windowLayout.height - top)\n    ) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n      const bottom =\n        top +\n        (scrollableMenuHeight || menuLayout.height) +\n        additionalVerticalValue;\n\n      // Check if menu position has enough space from bottom side\n      if (bottom > windowLayout.height - SCREEN_INDENT) {\n        top =\n          scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n            ? -SCREEN_INDENT * 2\n            : windowLayout.height -\n              menuLayout.height -\n              SCREEN_INDENT -\n              additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n      ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n    };\n\n    const positionStyle = {\n      top: this.isAnchorCoord() ? top : top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n\n    return (\n      <View\n        ref={ref => {\n          this.anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {this.isAnchorCoord() ? null : anchor}\n        {rendered ? (\n          <Portal>\n            <TouchableWithoutFeedback onPress={onDismiss}>\n              <View style={StyleSheet.absoluteFill} />\n            </TouchableWithoutFeedback>\n            <View\n              ref={ref => {\n                this.menu = ref;\n              }}\n              collapsable={false}\n              accessibilityViewIsModal={visible}\n              style={[styles.wrapper, positionStyle, style]}\n              pointerEvents={visible ? 'box-none' : 'none'}\n            >\n              <Animated.View style={{ transform: positionTransforms }}>\n                <Surface\n                  style={\n                    [\n                      styles.shadowMenuContainer,\n                      shadowMenuContainerStyle,\n                      contentStyle,\n                    ] as StyleProp<ViewStyle>\n                  }\n                >\n                  {(scrollableMenuHeight && (\n                    <ScrollView>{children}</ScrollView>\n                  )) || <React.Fragment>{children}</React.Fragment>}\n                </Surface>\n              </Animated.View>\n            </View>\n          </Portal>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8,\n  },\n});\n\nexport default withTheme(Menu);\n"]},"metadata":{},"sourceType":"script"}