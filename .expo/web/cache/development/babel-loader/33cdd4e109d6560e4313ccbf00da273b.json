{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Git Hub\\\\CAD\\\\screens\\\\ReaderScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Button } from 'react-native-paper';\nimport NavigationTop from \"./../components/NavigationTop\";\nimport TabBarIconFontAwesome from \"../components/TabBarIconFontAwesome\";\nimport base from \"../constants/styles/Styles\";\nimport styles from \"../constants/styles/ReaderStyles\";\nimport Resources from \"./../config/resources/resources\";\n\nvar ReaderScreen = function (_React$Component) {\n  _inherits(ReaderScreen, _React$Component);\n\n  var _super = _createSuper(ReaderScreen);\n\n  function ReaderScreen() {\n    _classCallCheck(this, ReaderScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ReaderScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: base.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationTop, {\n        title: Resources.READER_HEADER,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }), React.createElement(TabBarIconFontAwesome, {\n        style: styles.icon,\n        name: \"wifi\",\n        size: 200,\n        color: \"rgb(97,174,172)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.textIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, Resources.READER_TITLE), React.createElement(Button, {\n        mode: \"contained\",\n        style: {\n          backgroundColor: '#2069b2',\n          borderRadius: 0,\n          marginTop: 35\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, Resources.READER_TEXT_BUTTON)));\n    }\n  }]);\n\n  return ReaderScreen;\n}(React.Component);\n\nexport { ReaderScreen as default };","map":{"version":3,"sources":["C:/Users/David/Desktop/Git Hub/CAD/screens/ReaderScreen.js"],"names":["React","Button","NavigationTop","TabBarIconFontAwesome","base","styles","Resources","ReaderScreen","container","READER_HEADER","icon","textIcon","READER_TITLE","backgroundColor","borderRadius","marginTop","fontSize","READER_TEXT_BUTTON","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,MAAT,QAAsB,oBAAtB;AACA,OAAOC,aAAP;AACA,OAAOC,qBAAP;AACA,OAAQC,IAAR;AACA,OAAQC,MAAR;AACA,OAAOC,SAAP;;IAEqBC,Y;;;;;;;;;;;;;6BAEX;AACN,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEH,IAAI,CAACI,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAEF,SAAS,CAACG,aADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,qBAAD;AAAuB,QAAA,KAAK,EAAEJ,MAAM,CAACK,IAArC;AAA2C,QAAA,IAAI,EAAC,MAAhD;AAAuD,QAAA,IAAI,EAAE,GAA7D;AAAkE,QAAA,KAAK,EAAC,iBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BL,SAAS,CAACM,YAAzC,CALF,EAME,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE,SAAlB;AAA6BC,UAAAA,YAAY,EAAE,CAA3C;AAA8CC,UAAAA,SAAS,EAAE;AAAzD,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BV,SAAS,CAACW,kBAAxC,CAJF,CANF,CADF;AAeD;;;;EAlBuCjB,KAAK,CAACkB,S;;SAA3BX,Y","sourcesContent":["import * as React from 'react';\r\nimport { Text, SafeAreaView } from 'react-native';\r\nimport { Button} from 'react-native-paper';\r\nimport NavigationTop from './../components/NavigationTop';\r\nimport TabBarIconFontAwesome from '../components/TabBarIconFontAwesome';\r\nimport  base  from '../constants/styles/Styles';\r\nimport  styles  from '../constants/styles/ReaderStyles';\r\nimport Resources from './../config/resources/resources';\r\n\r\nexport default class ReaderScreen extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n      <SafeAreaView style={base.container}>\r\n        <NavigationTop\r\n          title={Resources.READER_HEADER}\r\n        />\r\n        <TabBarIconFontAwesome style={styles.icon} name=\"wifi\" size={200} color=\"rgb(97,174,172)\" />\r\n        <Text style={styles.textIcon}>{Resources.READER_TITLE}</Text>\r\n        <Button\r\n          mode=\"contained\"\r\n          style={{backgroundColor: '#2069b2', borderRadius: 0, marginTop: 35}}\r\n        >\r\n          <Text style={{fontSize: 25}}>{Resources.READER_TEXT_BUTTON}</Text>\r\n        </Button>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}