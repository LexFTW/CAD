{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = configureFonts;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '400'\n    },\n    medium: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '500'\n    },\n    light: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '300'\n    },\n    thin: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '100'\n    }\n  },\n  ios: {\n    regular: {\n      fontFamily: 'System',\n      fontWeight: '400'\n    },\n    medium: {\n      fontFamily: 'System',\n      fontWeight: '500'\n    },\n    light: {\n      fontFamily: 'System',\n      fontWeight: '300'\n    },\n    thin: {\n      fontFamily: 'System',\n      fontWeight: '100'\n    }\n  },\n  default: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal'\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal'\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal'\n    }\n  }\n};\n\nfunction configureFonts(config) {\n  var fonts = _reactNative.Platform.select(_objectSpread({}, fontConfig, {}, config));\n\n  return fonts;\n}","map":{"version":3,"sources":["fonts.tsx"],"names":["fontConfig","web","regular","fontFamily","fontWeight","medium","light","thin","ios","default","fonts","Platform"],"mappings":";;;;;;;sDAAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EADH,wDAAA;AAEPC,MAAAA,UAAU,EAHT;AACM,KADN;AAKHC,IAAAA,MAAM,EAAE;AACNF,MAAAA,UAAU,EADJ,wDAAA;AAENC,MAAAA,UAAU,EAPT;AAKK,KALL;AASHE,IAAAA,KAAK,EAAE;AACLH,MAAAA,UAAU,EADL,wDAAA;AAELC,MAAAA,UAAU,EAXT;AASI,KATJ;AAaHG,IAAAA,IAAI,EAAE;AACJJ,MAAAA,UAAU,EADN,wDAAA;AAEJC,MAAAA,UAAU,EAhBG;AAcT;AAbH,GADY;AAmBjBI,EAAAA,GAAG,EAAE;AACHN,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EADH,QAAA;AAEPC,MAAAA,UAAU,EAHT;AACM,KADN;AAKHC,IAAAA,MAAM,EAAE;AACNF,MAAAA,UAAU,EADJ,QAAA;AAENC,MAAAA,UAAU,EAPT;AAKK,KALL;AASHE,IAAAA,KAAK,EAAE;AACLH,MAAAA,UAAU,EADL,QAAA;AAELC,MAAAA,UAAU,EAXT;AASI,KATJ;AAaHG,IAAAA,IAAI,EAAE;AACJJ,MAAAA,UAAU,EADN,QAAA;AAEJC,MAAAA,UAAU,EAlCG;AAgCT;AAbH,GAnBY;AAqCjBK,EAAAA,OAAO,EAAE;AACPP,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EADH,YAAA;AAEPC,MAAAA,UAAU,EAHL;AACE,KADF;AAKPC,IAAAA,MAAM,EAAE;AACNF,MAAAA,UAAU,EADJ,mBAAA;AAENC,MAAAA,UAAU,EAPL;AAKC,KALD;AASPE,IAAAA,KAAK,EAAE;AACLH,MAAAA,UAAU,EADL,kBAAA;AAELC,MAAAA,UAAU,EAXL;AASA,KATA;AAaPG,IAAAA,IAAI,EAAE;AACJJ,MAAAA,UAAU,EADN,iBAAA;AAEJC,MAAAA,UAAU,EApDhB;AAkDU;AAbC;AArCQ,CAAnB;;AAyDe,SAAA,cAAA,CAAA,MAAA,EAEN;AACP,MAAMM,KAAK,GAAGC,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,EAAd,MAAcA,CAAAA,CAAd;;AACA,SAAA,KAAA;AACD","sourcesContent":["import { Platform, PlatformOSType } from 'react-native';\nimport { Fonts } from '../types';\n\nconst fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '400' as '400',\n    },\n    medium: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '500' as '500',\n    },\n    light: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '300' as '300',\n    },\n    thin: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '100' as '100',\n    },\n  },\n  ios: {\n    regular: {\n      fontFamily: 'System',\n      fontWeight: '400' as '400',\n    },\n    medium: {\n      fontFamily: 'System',\n      fontWeight: '500' as '500',\n    },\n    light: {\n      fontFamily: 'System',\n      fontWeight: '300' as '300',\n    },\n    thin: {\n      fontFamily: 'System',\n      fontWeight: '100' as '100',\n    },\n  },\n  default: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal' as 'normal',\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal' as 'normal',\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal' as 'normal',\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal' as 'normal',\n    },\n  },\n};\n\nexport default function configureFonts(\n  config?: { [platform in PlatformOSType | 'default']?: Fonts }\n): Fonts {\n  const fonts = Platform.select({ ...fontConfig, ...config }) as Fonts;\n  return fonts;\n}\n"]},"metadata":{},"sourceType":"script"}