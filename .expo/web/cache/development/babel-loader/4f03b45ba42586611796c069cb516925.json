{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/ActivityIndicator.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar DURATION = 2400;\n\nvar ActivityIndicator = function (_React$Component) {\n  (0, _inherits2.default)(ActivityIndicator, _React$Component);\n\n  function ActivityIndicator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ActivityIndicator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ActivityIndicator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      timer: new _reactNative.Animated.Value(0),\n      fade: new _reactNative.Animated.Value(!_this.props.animating && _this.props.hidesWhenStopped ? 0 : 1)\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rotation\", undefined);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"startRotation\", function () {\n      var _this$state = _this.state,\n          fade = _this$state.fade,\n          timer = _this$state.timer;\n      var scale = _this.props.theme.animation.scale;\n\n      _reactNative.Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 1,\n        isInteraction: false,\n        useNativeDriver: true\n      }).start();\n\n      if (_this.rotation) {\n        timer.setValue(0);\n\n        _reactNative.Animated.loop(_this.rotation).start();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"stopRotation\", function () {\n      if (_this.rotation) {\n        _this.rotation.stop();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(ActivityIndicator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var animating = this.props.animating;\n      var timer = this.state.timer;\n      this.rotation = _reactNative.Animated.timing(timer, {\n        duration: DURATION,\n        easing: _reactNative.Easing.linear,\n        useNativeDriver: _reactNative.Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n\n      if (animating) {\n        this.startRotation();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          animating = _this$props.animating,\n          hidesWhenStopped = _this$props.hidesWhenStopped,\n          scale = _this$props.theme.animation.scale;\n      var fade = this.state.fade;\n\n      if (animating !== prevProps.animating) {\n        if (animating) {\n          this.startRotation();\n        } else if (hidesWhenStopped) {\n          _reactNative.Animated.timing(fade, {\n            duration: 200 * scale,\n            toValue: 0,\n            useNativeDriver: true,\n            isInteraction: false\n          }).start(this.stopRotation.bind(this));\n        } else {\n          this.stopRotation();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          fade = _this$state2.fade,\n          timer = _this$state2.timer;\n      var _this$props2 = this.props,\n          animating = _this$props2.animating,\n          indicatorColor = _this$props2.color,\n          hidesWhenStopped = _this$props2.hidesWhenStopped,\n          indicatorSize = _this$props2.size,\n          style = _this$props2.style,\n          theme = _this$props2.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props2, [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"]);\n      var color = indicatorColor || theme.colors.primary;\n      var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n      var frames = 60 * DURATION / 1000;\n\n      var easing = _reactNative.Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\n      var containerStyle = {\n        width: size,\n        height: size / 2,\n        overflow: 'hidden'\n      };\n      return React.createElement(_reactNative.View, (0, _extends2.default)({\n        style: [styles.container, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      }), React.createElement(_reactNative.Animated.View, {\n        style: [{\n          width: size,\n          height: size,\n          opacity: fade\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      }, [0, 1].map(function (index) {\n        var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n          return frameIndex / (frames - 1);\n        });\n        var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n          var progress = 2 * frameIndex / (frames - 1);\n          var rotation = index ? +(360 - 15) : -(180 - 15);\n\n          if (progress > 1.0) {\n            progress = 2.0 - progress;\n          }\n\n          var direction = index ? -1 : +1;\n          return \"\".concat(direction * (180 - 30) * easing(progress) + rotation, \"deg\");\n        });\n        var layerStyle = {\n          width: size,\n          height: size,\n          transform: [{\n            rotate: timer.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"\".concat(0 + 30 + 15, \"deg\"), \"\".concat(2 * 360 + 30 + 15, \"deg\")]\n            })\n          }]\n        };\n        var viewportStyle = {\n          width: size,\n          height: size,\n          transform: [{\n            translateY: index ? -size / 2 : 0\n          }, {\n            rotate: timer.interpolate({\n              inputRange: inputRange,\n              outputRange: outputRange\n            })\n          }]\n        };\n        var offsetStyle = index ? {\n          top: size / 2\n        } : null;\n        var lineStyle = {\n          width: size,\n          height: size,\n          borderColor: color,\n          borderWidth: size / 10,\n          borderRadius: size / 2\n        };\n        return React.createElement(_reactNative.Animated.View, {\n          key: index,\n          style: [styles.layer],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: layerStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: [containerStyle, offsetStyle],\n          collapsable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: viewportStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: containerStyle,\n          collapsable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: lineStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          }\n        }))))));\n      })));\n    }\n  }]);\n  return ActivityIndicator;\n}(React.Component);\n\n(0, _defineProperty2.default)(ActivityIndicator, \"defaultProps\", {\n  animating: true,\n  size: 'small',\n  hidesWhenStopped: true\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\n\nvar _default = (0, _theming.withTheme)(ActivityIndicator);\n\nexports.default = _default;","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["DURATION","ActivityIndicator","React","Component","animating","size","hidesWhenStopped","timer","Animated","fade","undefined","duration","easing","Easing","useNativeDriver","Platform","toValue","isInteraction","prevProps","scale","indicatorColor","indicatorSize","style","theme","rest","color","frames","containerStyle","width","height","overflow","styles","opacity","inputRange","Array","frameIndex","outputRange","progress","rotation","index","direction","layerStyle","transform","rotate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","StyleSheet","container","justifyContent","alignItems","layer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  timer: Animated.Value;\n  fade: Animated.Value;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ActivityIndicator extends React.Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    animating: true,\n    size: 'small',\n    hidesWhenStopped: true,\n  };\n\n  state = {\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(\n      !this.props.animating && this.props.hidesWhenStopped ? 0 : 1\n    ),\n  };\n\n  rotation: Animated.CompositeAnimation | undefined = undefined;\n\n  componentDidMount() {\n    const { animating } = this.props;\n    const { timer } = this.state;\n\n    // Circular animation in loop\n    this.rotation = Animated.timing(timer, {\n      duration: DURATION,\n      easing: Easing.linear,\n      // Animated.loop does not work if useNativeDriver is true on web\n      useNativeDriver: Platform.OS !== 'web',\n      toValue: 1,\n      isInteraction: false,\n    });\n\n    if (animating) {\n      this.startRotation();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      animating,\n      hidesWhenStopped,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n    const { fade } = this.state;\n\n    if (animating !== prevProps.animating) {\n      if (animating) {\n        this.startRotation();\n      } else if (hidesWhenStopped) {\n        // Hide indicator first and then stop rotation\n        Animated.timing(fade, {\n          duration: 200 * scale,\n          toValue: 0,\n          useNativeDriver: true,\n          isInteraction: false,\n        }).start(this.stopRotation.bind(this));\n      } else {\n        this.stopRotation();\n      }\n    }\n  }\n\n  private startRotation = () => {\n    const { fade, timer } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (this.rotation) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(this.rotation).start();\n    }\n  };\n\n  private stopRotation = () => {\n    if (this.rotation) {\n      this.rotation.stop();\n    }\n  };\n\n  render() {\n    const { fade, timer } = this.state;\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      animating,\n      color: indicatorColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      hidesWhenStopped,\n      size: indicatorSize,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const color = indicatorColor || theme.colors.primary;\n    const size =\n      typeof indicatorSize === 'string'\n        ? indicatorSize === 'small'\n          ? 24\n          : 48\n        : indicatorSize\n        ? indicatorSize\n        : 24;\n\n    const frames = (60 * DURATION) / 1000;\n    const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n    const containerStyle = {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n    };\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        <Animated.View style={[{ width: size, height: size, opacity: fade }]}>\n          {[0, 1].map(index => {\n            // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n            const inputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => frameIndex / (frames - 1)\n            );\n            const outputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => {\n                let progress = (2 * frameIndex) / (frames - 1);\n                const rotation = index ? +(360 - 15) : -(180 - 15);\n\n                if (progress > 1.0) {\n                  progress = 2.0 - progress;\n                }\n\n                const direction = index ? -1 : +1;\n\n                return `${direction * (180 - 30) * easing(progress) +\n                  rotation}deg`;\n              }\n            );\n\n            const layerStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  rotate: timer.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [\n                      `${0 + 30 + 15}deg`,\n                      `${2 * 360 + 30 + 15}deg`,\n                    ],\n                  }),\n                },\n              ],\n            };\n\n            const viewportStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  translateY: index ? -size / 2 : 0,\n                },\n                {\n                  rotate: timer.interpolate({ inputRange, outputRange }),\n                },\n              ],\n            };\n\n            const offsetStyle = index ? { top: size / 2 } : null;\n\n            const lineStyle = {\n              width: size,\n              height: size,\n              borderColor: color,\n              borderWidth: size / 10,\n              borderRadius: size / 2,\n            };\n\n            return (\n              <Animated.View key={index} style={[styles.layer]}>\n                <Animated.View style={layerStyle}>\n                  <Animated.View\n                    style={[containerStyle, offsetStyle]}\n                    collapsable={false}\n                  >\n                    <Animated.View style={viewportStyle}>\n                      <Animated.View style={containerStyle} collapsable={false}>\n                        <Animated.View style={lineStyle} />\n                      </Animated.View>\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"script"}