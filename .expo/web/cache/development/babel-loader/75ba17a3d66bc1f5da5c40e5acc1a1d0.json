{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _Divider = _interopRequireDefault(require(\"../Divider\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Drawer/DrawerSection.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar DrawerSection = function (_React$Component) {\n  (0, _inherits2.default)(DrawerSection, _React$Component);\n\n  function DrawerSection() {\n    (0, _classCallCheck2.default)(this, DrawerSection);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerSection).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(DrawerSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          title = _this$props.title,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"children\", \"title\", \"theme\", \"style\"]);\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var titleColor = (0, _color.default)(colors.text).alpha(0.54).rgb().string();\n      var font = fonts.medium;\n      return React.createElement(_reactNative.View, (0, _extends2.default)({\n        style: [styles.container, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }), title && React.createElement(_reactNative.View, {\n        style: styles.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, React.createElement(_Text.default, {\n        numberOfLines: 1,\n        style: _objectSpread({\n          color: titleColor\n        }, font, {\n          marginLeft: 16\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }, title)), children, React.createElement(_Divider.default, {\n        style: styles.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }));\n    }\n  }]);\n  return DrawerSection;\n}(React.Component);\n\n(0, _defineProperty2.default)(DrawerSection, \"displayName\", 'Drawer.Section');\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  divider: {\n    marginTop: 4\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DrawerSection);\n\nexports.default = _default;","map":{"version":3,"sources":["DrawerSection.tsx"],"names":["DrawerSection","React","Component","children","title","theme","style","rest","colors","fonts","titleColor","font","styles","color","marginLeft","StyleSheet","container","marginBottom","titleContainer","height","justifyContent","divider","marginTop"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     active: 'first',\n *   };\n *\n *   render() {\n *     const { active } = this.state;\n *\n *     return (\n *       <Drawer.Section title=\"Some title\">\n *         <Drawer.Item\n *           label=\"First Item\"\n *           active={active === 'first'}\n *           onPress={() => { this.setState({ active: 'first' }); }}\n *         />\n *         <Drawer.Item\n *           label=\"Second Item\"\n *           active={active === 'second'}\n *           onPress={() => { this.setState({ active: 'second' }); }}\n *         />\n *      </Drawer.Section>\n *     );\n *   }\n * }\n * ```\n */\nclass DrawerSection extends React.Component<Props> {\n  static displayName = 'Drawer.Section';\n\n  render() {\n    const { children, title, theme, style, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const titleColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    const font = fonts.medium;\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        {title && (\n          <View style={styles.titleContainer}>\n            <Text\n              numberOfLines={1}\n              style={{ color: titleColor, ...font, marginLeft: 16 }}\n            >\n              {title}\n            </Text>\n          </View>\n        )}\n        {children}\n        <Divider style={styles.divider} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"script"}