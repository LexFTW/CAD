{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.accessibilityProps = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/MaterialCommunityIcon.tsx\";\nvar MaterialCommunityIcons;\n\ntry {\n  MaterialCommunityIcons = require(\"@expo/vector-icons/MaterialCommunityIcons\").default;\n} catch (e) {\n  if (global.__expo && global.__expo.Icon && global.__expo.Icon.MaterialCommunityIcons) {\n    MaterialCommunityIcons = global.__expo.Icon.MaterialCommunityIcons;\n  } else {\n    var isErrorLogged = false;\n\n    MaterialCommunityIcons = function MaterialCommunityIcons(_ref) {\n      var name = _ref.name,\n          color = _ref.color,\n          size = _ref.size,\n          rest = (0, _objectWithoutProperties2.default)(_ref, [\"name\", \"color\", \"size\"]);\n\n      if (!isErrorLogged) {\n        if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n          console.error(e);\n        }\n\n        console.warn(\"Tried to use the icon '\".concat(name, \"' in a component from 'react-native-paper', but 'react-native-vector-icons' could not be loaded.\"), \"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");\n        isErrorLogged = true;\n      }\n\n      return React.createElement(_reactNative.Text, (0, _extends2.default)({}, rest, {\n        style: [styles.icon, {\n          color: color,\n          fontSize: size\n        }],\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }), \"\\u25A1\");\n    };\n  }\n}\n\nvar accessibilityProps = _reactNative.Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\nexports.accessibilityProps = accessibilityProps;\n\nvar defaultIcon = function defaultIcon(_ref2) {\n  var name = _ref2.name,\n      color = _ref2.color,\n      size = _ref2.size,\n      direction = _ref2.direction,\n      allowFontScaling = _ref2.allowFontScaling;\n  return React.createElement(MaterialCommunityIcons, (0, _extends2.default)({\n    allowFontScaling: allowFontScaling,\n    name: name,\n    color: color,\n    size: size,\n    style: [{\n      transform: [{\n        scaleX: direction === 'rtl' ? -1 : 1\n      }]\n    }, styles.icon],\n    pointerEvents: \"none\"\n  }, accessibilityProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    }\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\n\nvar _default = defaultIcon;\nexports.default = _default;","map":{"version":3,"sources":["MaterialCommunityIcon.tsx"],"names":["MaterialCommunityIcons","require","global","isErrorLogged","name","color","size","rest","e","console","styles","fontSize","accessibilityProps","Platform","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","direction","allowFontScaling","transform","scaleX","StyleSheet","icon","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform } from 'react-native';\n\nexport type IconProps = {\n  name: string;\n  color: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n};\n\nlet MaterialCommunityIcons: any;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons')\n    .default;\n} catch (e) {\n  if (\n    // @ts-ignore\n    global.__expo &&\n    // @ts-ignore\n    global.__expo.Icon &&\n    // @ts-ignore\n    global.__expo.Icon.MaterialCommunityIcons\n  ) {\n    // Snack doesn't properly bundle vector icons from subpath\n    // Use icons from the __expo global if available\n    // @ts-ignore\n    MaterialCommunityIcons = global.__expo.Icon.MaterialCommunityIcons;\n  } else {\n    let isErrorLogged = false;\n\n    // Fallback component for icons\n    // @ts-ignore\n    MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n      /* eslint-disable no-console */\n      if (!isErrorLogged) {\n        if (\n          !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n            e.message\n          )\n        ) {\n          console.error(e);\n        }\n\n        console.warn(\n          `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons' could not be loaded.`,\n          `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n        );\n\n        isErrorLogged = true;\n      }\n\n      return (\n        <Text\n          {...rest}\n          style={[styles.icon, { color, fontSize: size }]}\n          pointerEvents=\"none\"\n        >\n          â–¡\n        </Text>\n      );\n    };\n  }\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color,\n  size,\n  direction,\n  allowFontScaling,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]},"metadata":{},"sourceType":"script"}