{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _AppbarAction = _interopRequireDefault(require(\"./AppbarAction\"));\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarBackAction.tsx\";\n\nvar AppbarBackAction = function (_React$Component) {\n  (0, _inherits2.default)(AppbarBackAction, _React$Component);\n\n  function AppbarBackAction() {\n    (0, _classCallCheck2.default)(this, AppbarBackAction);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AppbarBackAction).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(AppbarBackAction, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_AppbarAction.default, (0, _extends2.default)({}, this.props, {\n        icon: function icon(_ref) {\n          var size = _ref.size,\n              color = _ref.color;\n          return _reactNative.Platform.OS === 'ios' ? React.createElement(_reactNative.View, {\n            style: [styles.wrapper, {\n              width: size,\n              height: size,\n              transform: [{\n                scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n              }]\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            }\n          }, React.createElement(_reactNative.Image, {\n            source: require(\"../../assets/back-chevron.png\"),\n            style: [styles.icon, {\n              tintColor: color\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            }\n          })) : React.createElement(_MaterialCommunityIcon.default, {\n            name: \"arrow-left\",\n            color: color,\n            size: size,\n            direction: _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }));\n    }\n  }]);\n  return AppbarBackAction;\n}(React.Component);\n\n(0, _defineProperty2.default)(AppbarBackAction, \"displayName\", 'Appbar.BackAction');\n(0, _defineProperty2.default)(AppbarBackAction, \"defaultProps\", {\n  accessibilityLabel: 'Back'\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain'\n  }\n});\n\nvar _default = AppbarBackAction;\nexports.default = _default;","map":{"version":3,"sources":["AppbarBackAction.tsx"],"names":["AppbarBackAction","React","Component","accessibilityLabel","size","color","Platform","styles","width","height","transform","scaleX","I18nManager","require","tintColor","StyleSheet","wrapper","alignItems","justifyContent","icon","resizeMode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAWA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,kBAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA;;;;AAgCMA,IAAAA,gB;;;;;;;;;;6BAOK;AACP,aACE,KAAA,CAAA,aAAA,CAAC,aAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EACM,KADN,KAAA,EAAA;AAEE,QAAA,IAAI,EAAE,SAAA,IAAA,CAAA,IAAA,EAAA;AAAA,cAAGI,IAAH,GAAA,IAAA,CAAA,IAAA;AAAA,cAASC,KAAT,GAAA,IAAA,CAAA,KAAA;AAAA,iBACJC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AACE,YAAA,KAAK,EAAE,CACLC,MAAM,CADD,OAAA,EAEL;AACEC,cAAAA,KAAK,EADP,IAAA;AAEEC,cAAAA,MAAM,EAFR,IAAA;AAGEC,cAAAA,SAAS,EAAE,CAAC;AAAEC,gBAAAA,MAAM,EAAEC,YAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAAoB,CAApBA,CAAAA,GAN5B;AAMkB,eAAD;AAHb,aAFK,CADT;AAAA,YAAA,QAAA,EAAA;AAAA,cAAA,QAAA,EAAA,YAAA;AAAA,cAAA,UAAA,EAAA;AAAA;AAAA,WAAA,EAUE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,KAAA,EAAA;AACE,YAAA,MAAM,EAAEC,OADV,iCAAA;AAEE,YAAA,KAAK,EAAE,CAACN,MAAM,CAAP,IAAA,EAAc;AAAEO,cAAAA,SAAS,EAFlC;AAEuB,aAAd,CAFT;AAAA,YAAA,QAAA,EAAA;AAAA,cAAA,QAAA,EAAA,YAAA;AAAA,cAAA,UAAA,EAXJR;AAWI;AAAA,WAAA,CAVF,CADFA,GAiBE,KAAA,CAAA,aAAA,CAAC,sBAAA,CAAD,OAAA,EAAA;AACE,YAAA,IAAI,EADN,YAAA;AAEE,YAAA,KAAK,EAFP,KAAA;AAGE,YAAA,IAAI,EAHN,IAAA;AAIE,YAAA,SAAS,EAAEM,YAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAAAA,KAAAA,GAJb,KAAA;AAAA,YAAA,QAAA,EAAA;AAAA,cAAA,QAAA,EAAA,YAAA;AAAA,cAAA,UAAA,EAlBE;AAkBF;AAAA,WAAA,CAlBE;AAFR,SAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CAAA,CADF;;;;EAR2BX,KAAK,CAACC,S,CAA/BF;;8BAAAA,gB,iBACiB,mB;8BADjBA,gB,kBAGkB;AACpBG,EAAAA,kBAAkB,EADE;AAAA,C;;AAuCxB,IAAMI,MAAM,GAAGQ,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EADH,QAAA;AAEPC,IAAAA,cAAc,EAHe;AACtB,GADsB;AAK/BC,EAAAA,IAAI,EAAE;AACJV,IAAAA,MAAM,EADF,EAAA;AAEJD,IAAAA,KAAK,EAFD,EAAA;AAGJY,IAAAA,UAAU,EARd;AAKQ;AALyB,CAAlBL,CAAf;;eAYef,gB","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Image,\n  I18nManager,\n  StyleSheet,\n  Platform,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = $Omit<\n  React.ComponentProps<typeof AppbarAction> & {\n    /**\n     *  Custom color for back icon.\n     */\n    color?: string;\n    /**\n     * Optional icon size.\n     */\n    size?: number;\n    /**\n     * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n     */\n    disabled?: boolean;\n    /**\n     * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Function to execute on press.\n     */\n    onPress?: () => void;\n    style?: StyleProp<ViewStyle>;\n  },\n  'icon'\n>;\n\n/**\n * A component used to display a back button in the appbar.\n */\nclass AppbarBackAction extends React.Component<Props> {\n  static displayName = 'Appbar.BackAction';\n\n  static defaultProps = {\n    accessibilityLabel: 'Back',\n  };\n\n  render() {\n    return (\n      <AppbarAction\n        {...this.props}\n        icon={({ size, color }: { size: number; color: string }) =>\n          Platform.OS === 'ios' ? (\n            <View\n              style={[\n                styles.wrapper,\n                {\n                  width: size,\n                  height: size,\n                  transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n                },\n              ]}\n            >\n              <Image\n                source={require('../../assets/back-chevron.png')}\n                style={[styles.icon, { tintColor: color }]}\n              />\n            </View>\n          ) : (\n            <MaterialCommunityIcon\n              name=\"arrow-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain',\n  },\n});\n\nexport default AppbarBackAction;\n"]},"metadata":{},"sourceType":"script"}