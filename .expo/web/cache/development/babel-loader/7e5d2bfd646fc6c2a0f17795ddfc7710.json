{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _RadioButtonGroup = _interopRequireDefault(require(\"./RadioButtonGroup\"));\n\nvar _RadioButtonAndroid = _interopRequireDefault(require(\"./RadioButtonAndroid\"));\n\nvar _RadioButtonIOS = _interopRequireDefault(require(\"./RadioButtonIOS\"));\n\nvar _RadioButtonItem = _interopRequireDefault(require(\"./RadioButtonItem\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/RadioButton/RadioButton.tsx\";\n\nvar RadioButton = function (_React$Component) {\n  (0, _inherits2.default)(RadioButton, _React$Component);\n\n  function RadioButton() {\n    (0, _classCallCheck2.default)(this, RadioButton);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RadioButton).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(RadioButton, [{\n    key: \"render\",\n    value: function render() {\n      var Button = _reactNative.Platform.select({\n        default: _RadioButtonAndroid.default,\n        ios: _RadioButtonIOS.default\n      });\n\n      return React.createElement(Button, (0, _extends2.default)({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }));\n    }\n  }]);\n  return RadioButton;\n}(React.Component);\n\n(0, _defineProperty2.default)(RadioButton, \"Group\", _RadioButtonGroup.default);\n(0, _defineProperty2.default)(RadioButton, \"Android\", _RadioButtonAndroid.default);\n(0, _defineProperty2.default)(RadioButton, \"IOS\", _RadioButtonIOS.default);\n(0, _defineProperty2.default)(RadioButton, \"Item\", _RadioButtonItem.default);\n\nvar _default = (0, _theming.withTheme)(RadioButton);\n\nexports.default = _default;","map":{"version":3,"sources":["RadioButton.tsx"],"names":["RadioButton","React","Component","RadioButtonGroup","RadioButtonAndroid","RadioButtonIOS","RadioButtonItem","Button","Platform","default","ios"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,oBAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,qBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,sBAAA;;;;AAwFMA,IAAAA,W;;;;;;;;;;6BAaK;AACP,UAAMO,MAAM,GAAGC,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAgB;AAC7BC,QAAAA,OAAO,EAAEL,mBAAAA,CADoB,OAAA;AAE7BM,QAAAA,GAAG,EAAEL,eAAAA,CAFP;AAA+B,OAAhBG,CAAf;;AAKA,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAY,KAAZ,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAP;AAAO;AAAA,OAAA,CAAA,CAAP;;;;EAnBsBP,KAAK,CAACC,S,CAA1BF;;8BAAAA,W,WAEWG,iBAAAA,CAAAA,O;8BAFXH,W,aAKaI,mBAAAA,CAAAA,O;8BALbJ,W,SAQSK,eAAAA,CAAAA,O;8BARTL,W,UAWUM,gBAAAA,CAAAA,O;;eAYD,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,WAAA,C","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport RadioButtonItem from './RadioButtonItem';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\nexport type Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: 'first',\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *\n *     return (\n *       <View>\n *         <RadioButton\n *           value=\"first\"\n *           status={checked === 'first' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'first' }); }}\n *         />\n *         <RadioButton\n *           value=\"second\"\n *           status={checked === 'second' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'second' }); }}\n *         />\n *       </View>\n *     );\n *   }\n * }\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.tsx\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.tsx\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.tsx\n  static IOS = RadioButtonIOS;\n\n  // @component ./RadioButtonItem.tsx\n  static Item = RadioButtonItem;\n\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS,\n    });\n\n    return <Button {...this.props} />;\n  }\n}\n\nexport default withTheme(RadioButton);\n"]},"metadata":{},"sourceType":"script"}