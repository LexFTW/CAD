{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { UnavailabilityError } from '@unimodules/core';\nimport Constants from 'expo-constants';\nimport invariant from 'invariant';\nimport ExpoGoogleSignIn from \"./ExpoGoogleSignIn\";\nimport GoogleUser from \"./GoogleUser\";\nvar ERRORS = ExpoGoogleSignIn.ERRORS,\n    SCOPES = ExpoGoogleSignIn.SCOPES,\n    TYPES = ExpoGoogleSignIn.TYPES;\nexport { ERRORS, SCOPES, TYPES };\nvar DEFAULT_SCOPES = [SCOPES.PROFILE, SCOPES.EMAIL];\n\nvar _initialization;\n\nvar _options;\n\nvar _currentUser = null;\nvar _isClientUsageEnabled = false;\n\nfunction setCurrentUser(currentUser) {\n  _currentUser = currentUser;\n  return _currentUser;\n}\n\nfunction validateOptions(options) {\n  if (!options) {\n    return {\n      scopes: DEFAULT_SCOPES\n    };\n  }\n\n  if (options.isOfflineEnabled) {\n    invariant(typeof options.webClientId === 'string' && options.webClientId !== '', 'GoogleSignIn: Offline access (isOfflineEnabled: true) requires a valid google server id `webClientId`');\n  }\n\n  return _objectSpread({}, options, {\n    scopes: options.scopes || DEFAULT_SCOPES\n  });\n}\n\nfunction validateOwnership() {\n  invariant(_isClientUsageEnabled || Constants.appOwnership !== 'expo', 'expo-google-sign-in is not supported in the Expo Client because a custom URL scheme is required at build time. Please refer to the docs for usage outside of Expo www.npmjs.com/package/expo-google-sign-in');\n}\n\nfunction ensureGoogleIsInitializedAsync(options) {\n  return _regeneratorRuntime.async(function ensureGoogleIsInitializedAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(_initialization == null)) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\", initAsync(options));\n\n        case 2:\n          return _context.abrupt(\"return\", _initialization);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction invokeAuthMethod(method) {\n  var payload, account;\n  return _regeneratorRuntime.async(function invokeAuthMethod$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (ExpoGoogleSignIn[method]) {\n            _context2.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('GoogleSignIn', method);\n\n        case 2:\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(ensureGoogleIsInitializedAsync());\n\n        case 4:\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(ExpoGoogleSignIn[method]());\n\n        case 6:\n          payload = _context2.sent;\n          account = payload != null ? new GoogleUser(payload) : null;\n          return _context2.abrupt(\"return\", setCurrentUser(account));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function allowInClient() {\n  _isClientUsageEnabled = true;\n}\nexport function getCurrentUser() {\n  return _currentUser;\n}\nexport function askForPlayServicesAsync() {\n  return _regeneratorRuntime.async(function askForPlayServicesAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(getPlayServiceAvailability(true));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getPlayServiceAvailability() {\n  var shouldAsk,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function getPlayServiceAvailability$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          shouldAsk = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : false;\n          validateOwnership();\n\n          if (!ExpoGoogleSignIn.arePlayServicesAvailableAsync) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(ExpoGoogleSignIn.arePlayServicesAvailableAsync(shouldAsk));\n\n        case 5:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 8:\n          return _context4.abrupt(\"return\", true);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function initAsync(options) {\n  var hasPlayServices;\n  return _regeneratorRuntime.async(function initAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (ExpoGoogleSignIn.initAsync) {\n            _context5.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('GoogleSignIn', 'initAsync');\n\n        case 2:\n          _options = validateOptions(options || _options || {});\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(getPlayServiceAvailability());\n\n        case 5:\n          hasPlayServices = _context5.sent;\n\n          if (hasPlayServices) {\n            _context5.next = 8;\n            break;\n          }\n\n          return _context5.abrupt(\"return\");\n\n        case 8:\n          _initialization = ExpoGoogleSignIn.initAsync(_options || {});\n          return _context5.abrupt(\"return\", _initialization);\n\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isSignedInAsync() {\n  var user;\n  return _regeneratorRuntime.async(function isSignedInAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(getCurrentUserAsync());\n\n        case 2:\n          user = _context6.sent;\n          return _context6.abrupt(\"return\", user != null);\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isConnectedAsync() {\n  return _regeneratorRuntime.async(function isConnectedAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(ExpoGoogleSignIn.isConnectedAsync());\n\n        case 2:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signInSilentlyAsync() {\n  var isConnected, auth;\n  return _regeneratorRuntime.async(function signInSilentlyAsync$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(isConnectedAsync());\n\n        case 2:\n          isConnected = _context8.sent;\n\n          if (!isConnected) {\n            _context8.next = 16;\n            break;\n          }\n\n          _context8.prev = 4;\n          _context8.next = 7;\n          return _regeneratorRuntime.awrap(invokeAuthMethod('signInSilentlyAsync'));\n\n        case 7:\n          auth = _context8.sent;\n          return _context8.abrupt(\"return\", auth);\n\n        case 11:\n          _context8.prev = 11;\n          _context8.t0 = _context8[\"catch\"](4);\n\n          if (!(_context8.t0.code === ERRORS.SIGN_IN_REQUIRED)) {\n            _context8.next = 15;\n            break;\n          }\n\n          return _context8.abrupt(\"return\", null);\n\n        case 15:\n          throw _context8.t0;\n\n        case 16:\n          return _context8.abrupt(\"return\", null);\n\n        case 17:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[4, 11]], Promise);\n}\nexport function signInAsync() {\n  var user;\n  return _regeneratorRuntime.async(function signInAsync$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(invokeAuthMethod('signInAsync'));\n\n        case 3:\n          user = _context9.sent;\n          return _context9.abrupt(\"return\", {\n            type: 'success',\n            user: user\n          });\n\n        case 7:\n          _context9.prev = 7;\n          _context9.t0 = _context9[\"catch\"](0);\n\n          if (!(_context9.t0.code === ERRORS.SIGN_IN_CANCELLED)) {\n            _context9.next = 11;\n            break;\n          }\n\n          return _context9.abrupt(\"return\", {\n            type: 'cancel',\n            user: null\n          });\n\n        case 11:\n          throw _context9.t0;\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function signOutAsync() {\n  return _regeneratorRuntime.async(function signOutAsync$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _regeneratorRuntime.awrap(invokeAuthMethod('signOutAsync'));\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function disconnectAsync() {\n  return _regeneratorRuntime.async(function disconnectAsync$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return _regeneratorRuntime.awrap(invokeAuthMethod('disconnectAsync'));\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getCurrentUserAsync() {\n  return _regeneratorRuntime.async(function getCurrentUserAsync$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _regeneratorRuntime.awrap(invokeAuthMethod('getCurrentUserAsync'));\n\n        case 2:\n          return _context12.abrupt(\"return\", _context12.sent);\n\n        case 3:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getPhotoAsync() {\n  var size,\n      _args13 = arguments;\n  return _regeneratorRuntime.async(function getPhotoAsync$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          size = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : 128;\n\n          if (ExpoGoogleSignIn.getPhotoAsync) {\n            _context13.next = 3;\n            break;\n          }\n\n          throw new UnavailabilityError('GoogleSignIn', 'getPhotoAsync');\n\n        case 3:\n          _context13.next = 5;\n          return _regeneratorRuntime.awrap(ensureGoogleIsInitializedAsync());\n\n        case 5:\n          _context13.next = 7;\n          return _regeneratorRuntime.awrap(ExpoGoogleSignIn.getPhotoAsync(size));\n\n        case 7:\n          return _context13.abrupt(\"return\", _context13.sent);\n\n        case 8:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport { default as GoogleAuthData } from \"./GoogleAuthData\";\nexport { default as GoogleAuthentication } from \"./GoogleAuthentication\";\nexport { default as GoogleIdentity } from \"./GoogleIdentity\";\nexport { default as GoogleUser } from \"./GoogleUser\";","map":{"version":3,"sources":["../src/GoogleSignIn.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport Constants from 'expo-constants';\nimport invariant from 'invariant';\n\nimport ExpoGoogleSignIn from './ExpoGoogleSignIn';\nimport { GoogleSignInOptions, GoogleSignInAuthResult } from './GoogleSignIn.types';\nimport GoogleUser from './GoogleUser';\n\nexport const { ERRORS, SCOPES, TYPES } = ExpoGoogleSignIn;\n\nconst DEFAULT_SCOPES = [SCOPES.PROFILE, SCOPES.EMAIL];\n\nlet _initialization: Promise<void>;\nlet _options: GoogleSignInOptions;\nlet _currentUser: GoogleUser | null = null;\nlet _isClientUsageEnabled = false;\n\nfunction setCurrentUser(currentUser: GoogleUser | null): GoogleUser | null {\n  _currentUser = currentUser;\n  return _currentUser;\n}\n\nfunction validateOptions(options?: GoogleSignInOptions): GoogleSignInOptions {\n  if (!options) {\n    return {\n      scopes: DEFAULT_SCOPES,\n    };\n  }\n  if (options.isOfflineEnabled) {\n    invariant(\n      typeof options.webClientId === 'string' && options.webClientId !== '',\n      'GoogleSignIn: Offline access (isOfflineEnabled: true) requires a valid google server id `webClientId`'\n    );\n  }\n\n  return {\n    ...options,\n    scopes: options.scopes || DEFAULT_SCOPES,\n  };\n}\n\nfunction validateOwnership() {\n  invariant(\n    _isClientUsageEnabled || Constants.appOwnership !== 'expo',\n    'expo-google-sign-in is not supported in the Expo Client because a custom URL scheme is required at build time. Please refer to the docs for usage outside of Expo www.npmjs.com/package/expo-google-sign-in'\n  );\n}\n\nasync function ensureGoogleIsInitializedAsync(options?: GoogleSignInOptions): Promise<any> {\n  if (_initialization == null) {\n    return initAsync(options);\n  }\n  return _initialization;\n}\n\nasync function invokeAuthMethod(method: string): Promise<GoogleUser | null> {\n  if (!ExpoGoogleSignIn[method]) {\n    throw new UnavailabilityError('GoogleSignIn', method);\n  }\n  await ensureGoogleIsInitializedAsync();\n  const payload = await ExpoGoogleSignIn[method]();\n  let account = payload != null ? new GoogleUser(payload) : null;\n  return setCurrentUser(account);\n}\n\nexport function allowInClient() {\n  _isClientUsageEnabled = true;\n}\n\nexport function getCurrentUser(): GoogleUser | null {\n  return _currentUser;\n}\n\nexport async function askForPlayServicesAsync(): Promise<boolean> {\n  return await getPlayServiceAvailability(true);\n}\n\nexport async function getPlayServiceAvailability(shouldAsk: boolean = false): Promise<boolean> {\n  validateOwnership();\n\n  if (ExpoGoogleSignIn.arePlayServicesAvailableAsync) {\n    return await ExpoGoogleSignIn.arePlayServicesAvailableAsync(shouldAsk);\n  } else {\n    return true;\n  }\n}\n\nexport async function initAsync(options?: GoogleSignInOptions): Promise<void> {\n  if (!ExpoGoogleSignIn.initAsync) {\n    throw new UnavailabilityError('GoogleSignIn', 'initAsync');\n  }\n\n  _options = validateOptions(options || _options || {});\n\n  const hasPlayServices = await getPlayServiceAvailability();\n  if (!hasPlayServices) {\n    return;\n  }\n\n  _initialization = ExpoGoogleSignIn.initAsync(_options || {});\n\n  return _initialization;\n}\n\nexport async function isSignedInAsync(): Promise<boolean> {\n  const user = await getCurrentUserAsync();\n  return user != null;\n}\n\nexport async function isConnectedAsync(): Promise<boolean> {\n  return await ExpoGoogleSignIn.isConnectedAsync();\n}\n\nexport async function signInSilentlyAsync(): Promise<GoogleUser | null> {\n  const isConnected = await isConnectedAsync();\n  if (isConnected) {\n    try {\n      const auth = await invokeAuthMethod('signInSilentlyAsync');\n      return auth;\n    } catch (error) {\n      /* Return null to create parity with Android */\n      if (error.code === ERRORS.SIGN_IN_REQUIRED) {\n        return null;\n      }\n      throw error;\n    }\n  }\n  return null;\n}\n\nexport async function signInAsync(): Promise<GoogleSignInAuthResult> {\n  try {\n    const user = await invokeAuthMethod('signInAsync');\n    return { type: 'success', user };\n  } catch (error) {\n    if (error.code === ERRORS.SIGN_IN_CANCELLED) {\n      return { type: 'cancel', user: null };\n    }\n    throw error;\n  }\n}\n\nexport async function signOutAsync(): Promise<void> {\n  await invokeAuthMethod('signOutAsync');\n}\n\nexport async function disconnectAsync(): Promise<void> {\n  await invokeAuthMethod('disconnectAsync');\n}\n\nexport async function getCurrentUserAsync(): Promise<GoogleUser | null> {\n  return await invokeAuthMethod('getCurrentUserAsync');\n}\n\nexport async function getPhotoAsync(size: number = 128): Promise<string | null> {\n  if (!ExpoGoogleSignIn.getPhotoAsync) {\n    throw new UnavailabilityError('GoogleSignIn', 'getPhotoAsync');\n  }\n\n  await ensureGoogleIsInitializedAsync();\n  return await ExpoGoogleSignIn.getPhotoAsync(size);\n}\n\nexport { default as GoogleAuthData } from './GoogleAuthData';\nexport { default as GoogleAuthentication } from './GoogleAuthentication';\nexport { default as GoogleIdentity } from './GoogleIdentity';\nexport { default as GoogleUser } from './GoogleUser';\n\nexport {\n  GoogleSignInType,\n  GoogleSignInOptions,\n  GoogleSignInAuthResultType,\n  GoogleSignInAuthResult,\n} from './GoogleSignIn.types';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}