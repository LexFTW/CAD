{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _CheckboxAndroid2 = _interopRequireDefault(require(\"./CheckboxAndroid\"));\n\nvar _CheckboxIOS2 = _interopRequireDefault(require(\"./CheckboxIOS\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Checkbox.tsx\";\n\nvar Checkbox = function (_React$Component) {\n  (0, _inherits2.default)(Checkbox, _React$Component);\n\n  function Checkbox() {\n    (0, _classCallCheck2.default)(this, Checkbox);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      return _reactNative.Platform.OS === 'ios' ? React.createElement(_CheckboxIOS2.default, (0, _extends2.default)({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      })) : React.createElement(_CheckboxAndroid2.default, (0, _extends2.default)({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }));\n    }\n  }]);\n  return Checkbox;\n}(React.Component);\n\n(0, _defineProperty2.default)(Checkbox, \"Android\", _CheckboxAndroid2.default);\n(0, _defineProperty2.default)(Checkbox, \"IOS\", _CheckboxIOS2.default);\n\nvar _default = (0, _theming.withTheme)(Checkbox);\n\nexports.default = _default;","map":{"version":3,"sources":["Checkbox.tsx"],"names":["Checkbox","React","Component","CheckboxAndroid","CheckboxIOS","Platform"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,qBAAA,CAAA;;AAKA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,iBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,mBAAA;;;;AA0EMA,IAAAA,Q;;;;;;;;;;6BAOK;AACP,aAAOK,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GACL,KAAA,CAAA,aAAA,CAAC,aAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAiB,KAAjB,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADKA;AACL;AAAA,OAAA,CAAA,CADKA,GAGL,KAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAqB,KAArB,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAHF;AAGE;AAAA,OAAA,CAAA,CAHF;;;;EARmBJ,KAAK,CAACC,S,CAAvBF;;8BAAAA,Q,aAEaG,iBAAAA,CAAAA,O;8BAFbH,Q,SAKSI,aAAAA,CAAAA,O;;eAWA,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,QAAA,C","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: false,\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *     return (\n *       <Checkbox\n *         status={checked ? 'checked' : 'unchecked'}\n *         onPress={() => { this.setState({ checked: !checked }); }}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxAndroid.tsx\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.tsx\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"script"}