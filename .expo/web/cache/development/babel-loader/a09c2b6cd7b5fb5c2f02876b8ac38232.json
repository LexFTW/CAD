{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _colors = require(\"../../styles/colors\");\n\nvar _IconButton = _interopRequireDefault(require(\"../IconButton\"));\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarAction.tsx\";\n\nvar AppbarAction = function (_React$Component) {\n  (0, _inherits2.default)(AppbarAction, _React$Component);\n\n  function AppbarAction() {\n    (0, _classCallCheck2.default)(this, AppbarAction);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AppbarAction).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(AppbarAction, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$color = _this$props.color,\n          iconColor = _this$props$color === void 0 ? (0, _color.default)(_colors.black).alpha(0.54).rgb().string() : _this$props$color,\n          icon = _this$props.icon,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"color\", \"icon\", \"disabled\", \"onPress\", \"accessibilityLabel\"]);\n      return React.createElement(_IconButton.default, (0, _extends2.default)({\n        onPress: onPress,\n        color: iconColor,\n        icon: icon,\n        disabled: disabled,\n        accessibilityLabel: accessibilityLabel,\n        animated: true\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }));\n    }\n  }]);\n  return AppbarAction;\n}(React.Component);\n\nexports.default = AppbarAction;\n(0, _defineProperty2.default)(AppbarAction, \"displayName\", 'Appbar.Action');\n(0, _defineProperty2.default)(AppbarAction, \"defaultProps\", {\n  size: 24\n});","map":{"version":3,"sources":["AppbarAction.tsx"],"names":["AppbarAction","React","Component","size","iconColor","black","icon","disabled","onPress","accessibilityLabel","rest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,uBAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,iBAAA,CAAA;;;;AAkCqBA,IAAAA,Y;;;;;;;;;;6BAOV;AAAA,UAAA,WAAA,GAWH,KAXG,KAAA;AAAA,UAAA,iBAAA,GAAA,WAAA,CAAA,KAAA;AAAA,UAEEI,SAFF,GAAA,iBAAA,KAAA,KAAA,CAAA,GAEc,CAAA,GAAA,MAAA,CAAA,OAAA,EAAMC,OAAAA,CAAN,KAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAFd,MAEc,EAFd,GAAA,iBAAA;AAAA,UAMLC,IANK,GAAA,WAAA,CAAA,IAAA;AAAA,UAOLC,QAPK,GAAA,WAAA,CAAA,QAAA;AAAA,UAQLC,OARK,GAAA,WAAA,CAAA,OAAA;AAAA,UASLC,kBATK,GAAA,WAAA,CAAA,kBAAA;AAAA,UAUFC,IAVE,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,oBAAA,CAAA,CAAA;AAaP,aACE,KAAA,CAAA,aAAA,CAAC,WAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,QAAA,OAAO,EADT,OAAA;AAEE,QAAA,KAAK,EAFP,SAAA;AAGE,QAAA,IAAI,EAHN,IAAA;AAIE,QAAA,QAAQ,EAJV,QAAA;AAKE,QAAA,kBAAkB,EALpB,kBAAA;AAME,QAAA,QAAQ,EANV;AAAA,OAAA,EAAA,IAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CAAA,CADF;;;;EApBsCT,KAAK,CAACC,S,CAA3BF;;;8BAAAA,Y,iBACE,e;8BADFA,Y,kBAGG;AACpBG,EAAAA,IAAI,EADgB;AAAA,C","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { black } from '../../styles/colors';\nimport IconButton from '../IconButton';\nimport { IconSource } from '../Icon';\n\ntype Props = React.ComponentProps<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to display an action item in the appbar.\n */\nexport default class AppbarAction extends React.Component<Props> {\n  static displayName = 'Appbar.Action';\n\n  static defaultProps = {\n    size: 24,\n  };\n\n  render() {\n    const {\n      color: iconColor = color(black)\n        .alpha(0.54)\n        .rgb()\n        .string(),\n      icon,\n      disabled,\n      onPress,\n      accessibilityLabel,\n      ...rest\n    } = this.props;\n\n    return (\n      <IconButton\n        onPress={onPress}\n        color={iconColor}\n        icon={icon}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        animated\n        {...rest}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}