{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Dialog/DialogScrollArea.tsx\";\n\nvar DialogScrollArea = function (_React$Component) {\n  (0, _inherits2.default)(DialogScrollArea, _React$Component);\n\n  function DialogScrollArea() {\n    (0, _classCallCheck2.default)(this, DialogScrollArea);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogScrollArea).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(DialogScrollArea, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_reactNative.View, (0, _extends2.default)({}, this.props, {\n        style: [styles.container, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }), this.props.children);\n    }\n  }]);\n  return DialogScrollArea;\n}(React.Component);\n\n(0, _defineProperty2.default)(DialogScrollArea, \"displayName\", 'Dialog.ScrollArea');\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1\n  }\n});\n\nvar _default = DialogScrollArea;\nexports.default = _default;","map":{"version":3,"sources":["DialogScrollArea.tsx"],"names":["DialogScrollArea","React","Component","styles","StyleSheet","container","borderColor","borderTopWidth","borderBottomWidth","paddingHorizontal","flexGrow","flexShrink"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;AA8CMA,IAAAA,gB;;;;;;;;;;6BAGK;AACP,aACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAU,KAAV,KAAA,EAAA;AAAsB,QAAA,KAAK,EAAE,CAACG,MAAM,CAAP,SAAA,EAAmB,KAAA,KAAA,CAAhD,KAA6B,CAA7B;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EACG,KAAA,KAAA,CAFL,QACE,CADF;;;;EAJ2BF,KAAK,CAACC,S,CAA/BF;;8BAAAA,gB,iBACiB,mB;;AAWvB,IAAMG,MAAM,GAAGC,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EADF,oBAAA;AAETC,IAAAA,cAAc,EAAEH,YAAAA,CAAAA,UAAAA,CAFP,aAAA;AAGTI,IAAAA,iBAAiB,EAAEJ,YAAAA,CAAAA,UAAAA,CAHV,aAAA;AAITK,IAAAA,iBAAiB,EAJR,EAAA;AAKTC,IAAAA,QAAQ,EALC,CAAA;AAMTC,IAAAA,UAAU,EAPd;AACa;AADoB,CAAlBP,CAAf;;eAWeJ,gB","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Content of the `DialogScrollArea`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _hideDialog = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Portal>\n *         <Dialog\n *           visible={this.state.visible}\n *           onDismiss={this._hideDialog}>\n *           <Dialog.ScrollArea>\n *             <ScrollView contentContainerStyle={{ paddingHorizontal: 24 }}>\n *               <Text>This is a scrollable area</Text>\n *             </ScrollView>\n *           </Dialog.ScrollArea>\n *         </Dialog>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass DialogScrollArea extends React.Component<Props> {\n  static displayName = 'Dialog.ScrollArea';\n\n  render() {\n    return (\n      <View {...this.props} style={[styles.container, this.props.style]}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default DialogScrollArea;\n"]},"metadata":{},"sourceType":"script"}