{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ListAccordionGroupContext = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/List/ListAccordionGroup.tsx\";\nvar ListAccordionGroupContext = React.createContext(null);\nexports.ListAccordionGroupContext = ListAccordionGroupContext;\n\nvar ListAccordionGroup = function (_React$Component) {\n  (0, _inherits2.default)(ListAccordionGroup, _React$Component);\n\n  function ListAccordionGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ListAccordionGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ListAccordionGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      expandedId: undefined\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onAccordionPress\", function (expandedId) {\n      _this.setState(function (_ref) {\n        var currentExpandedId = _ref.expandedId;\n        return {\n          expandedId: currentExpandedId === expandedId ? undefined : expandedId\n        };\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(ListAccordionGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          expandedId = _this$props.expandedId,\n          onAccordionPress = _this$props.onAccordionPress,\n          children = _this$props.children;\n      return React.createElement(ListAccordionGroupContext.Provider, {\n        value: {\n          expandedId: expandedId || this.state.expandedId,\n          onAccordionPress: onAccordionPress || this.onAccordionPress\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, children);\n    }\n  }]);\n  return ListAccordionGroup;\n}(React.Component);\n\n(0, _defineProperty2.default)(ListAccordionGroup, \"displayName\", 'List.AccordionGroup');\nvar _default = ListAccordionGroup;\nexports.default = _default;","map":{"version":3,"sources":["ListAccordionGroup.tsx"],"names":["ListAccordionGroupContext","React","ListAccordionGroup","Component","expandedId","currentExpandedId","onAccordionPress","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;AAsBO,IAAMA,yBAAyB,GAAGC,KAAK,CAALA,aAAAA,CAAlC,IAAkCA,CAAlC;;;AA0CDC,IAAAA,kB;;;;;;;;;;;;;;;wFAGW;AACbE,MAAAA,UAAU,EADG;AAAA,K;mGAII,UAAA,UAAA,EAAiC;AAClD,MAAA,KAAA,CAAA,QAAA,CAAc,UAAA,IAAA,EAAA;AAAA,YAAeC,iBAAf,GAAA,IAAA,CAAA,UAAA;AAAA,eAAwC;AACpDD,UAAAA,UAAU,EAAEC,iBAAiB,KAAjBA,UAAAA,GAAAA,SAAAA,GADA;AAAwC,SAAxC;AAAd,OAAA;;;;;;;6BAKO;AAAA,UAAA,WAAA,GAC4C,KAD5C,KAAA;AAAA,UACCD,UADD,GAAA,WAAA,CAAA,UAAA;AAAA,UACaE,gBADb,GAAA,WAAA,CAAA,gBAAA;AAAA,UAC+BC,QAD/B,GAAA,WAAA,CAAA,QAAA;AAGP,aACE,KAAA,CAAA,aAAA,CAAC,yBAAD,CAAA,QAAA,EAAA;AACE,QAAA,KAAK,EAAE;AACLH,UAAAA,UAAU,EAAEA,UAAU,IAAI,KAAA,KAAA,CADrB,UAAA;AAELE,UAAAA,gBAAgB,EAAEA,gBAAgB,IAAI,KAH1C;AACS,SADT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EADF,QACE,CADF;;;;EAhB6BL,KAAK,CAACE,S,CAAjCD;;8BAAAA,kB,iBACiB,qB;eA4BRA,kB","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onAccordionPress?: (expandedId: string | number) => void;\n  /**\n   * Id of the currently expanded list accordion\n   */\n  expandedId?: string | number;\n  /**\n   * React elements containing list accordions\n   */\n  children: React.ReactNode;\n};\n\nexport type ListAccordionGroupContextType = {\n  expandedId: string | number | undefined;\n  onAccordionPress: (expandedId: string | number) => void;\n} | null;\n\nexport const ListAccordionGroupContext = React.createContext<\n  ListAccordionGroupContextType\n>(null);\n\n/**\n * List.AccordionGroup allows to control a group of List Accordions. Id prop for List.Accordion is required in order to group to work.\n * List.AccordionGroup can be controlled or uncontrolled component. Example shows uncontrolled version.\n * At most one Accordion will be expanded in given time.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, Text } from 'react-native';\n * import { List } from 'react-native-paper';\n *\n * function MyComponent() {\n *  return (\n *   <List.AccordionGroup>\n *     <List.Accordion title=\"Accordion 1\" id=\"1\">\n *       <List.Item title=\"Item 1\" />\n *     </List.Accordion>\n *     <List.Accordion title=\"Accordion 2\" id=\"2\">\n *       <List.Item title=\"Item 2\" />\n *     </List.Accordion>\n *     <View>\n *       <Text>\n *         List.Accordion can be wrapped because implementation uses React.Context.\n *       </Text>\n *       <List.Accordion title=\"Accordion 3\" id=\"3\">\n *         <List.Item title=\"Item 3\" />\n *       </List.Accordion>\n *     </View>\n *   </List.AccordionGroup>\n *  );\n * }\n *```\n */\n\ntype State = {\n  expandedId: string | number | undefined;\n};\n\nclass ListAccordionGroup extends React.Component<Props, State> {\n  static displayName = 'List.AccordionGroup';\n\n  state: State = {\n    expandedId: undefined,\n  };\n\n  onAccordionPress = (expandedId: string | number) => {\n    this.setState(({ expandedId: currentExpandedId }) => ({\n      expandedId: currentExpandedId === expandedId ? undefined : expandedId,\n    }));\n  };\n\n  render() {\n    const { expandedId, onAccordionPress, children } = this.props;\n\n    return (\n      <ListAccordionGroupContext.Provider\n        value={{\n          expandedId: expandedId || this.state.expandedId, // component can be controlled or uncontrolled\n          onAccordionPress: onAccordionPress || this.onAccordionPress,\n        }}\n      >\n        {children}\n      </ListAccordionGroupContext.Provider>\n    );\n  }\n}\n\nexport default ListAccordionGroup;\n"]},"metadata":{},"sourceType":"script"}