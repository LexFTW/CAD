{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Git Hub\\\\CAD\\\\screens\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Resources from \"./../config/resources/resources\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport ReaderScreen from \"../screens/ReaderScreen\";\nimport UserScreen from \"../screens/UserScreen\";\nimport MedicationScreen from \"../screens/MedicationScreen\";\nimport TabBarIconFoundation from \"../components/TabBarIconFoundation\";\nimport TabBarIconFontAwesome from \"../components/TabBarIconFontAwesome\";\nimport TabBarIconIonicons from \"../components/TabBarIconIonicons\";\nvar Tab = createBottomTabNavigator();\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        tabBarOptions: {\n          activeTintColor: 'white',\n          inactiveTintColor: '#72a2d3'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Medication\",\n        component: MedicationScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var focused = _ref.focused;\n            return React.createElement(TabBarIconFontAwesome, {\n              size: 24,\n              focused: focused,\n              name: \"ios-pulse\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 44\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Reader\",\n        component: ReaderScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused;\n            return React.createElement(TabBarIconIonicons, {\n              focused: focused,\n              name: \"md-wifi\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 44\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: UserScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused;\n            return React.createElement(TabBarIconFontAwesome, {\n              size: 24,\n              focused: focused,\n              name: \"user\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 44\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/David/Desktop/Git Hub/CAD/screens/HomeScreen.js"],"names":["React","WebBrowser","Resources","NavigationContainer","createBottomTabNavigator","Ionicons","ReaderScreen","UserScreen","MedicationScreen","TabBarIconFoundation","TabBarIconFontAwesome","TabBarIconIonicons","Tab","HomeScreen","activeTintColor","inactiveTintColor","tabBarIcon","focused","Component","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;;;;;;;;;;AAEA,OAAOC,SAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,kBAAP;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;;IAEqBS,U;;;;;;;;;;;;;6BAEX;AACN,aACI,oBAAC,GAAD,CAAK,SAAL;AACE,QAAA,aAAa,EAAE;AACbC,UAAAA,eAAe,EAAE,OADJ;AAEbC,UAAAA,iBAAiB,EAAE;AAFN,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,SAAS,EAAEP,gBAFb;AAGE,QAAA,OAAO,EAAE;AACPQ,UAAAA,UAAU,EAAE;AAAA,gBAAGC,OAAH,QAAGA,OAAH;AAAA,mBAAiB,oBAAC,qBAAD;AAAuB,cAAA,IAAI,EAAE,EAA7B;AAAiC,cAAA,OAAO,EAAEA,OAA1C;AAAmD,cAAA,IAAI,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AAAA;AADL,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAaE,oBAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEX,YAFb;AAGE,QAAA,OAAO,EAAE;AACPU,UAAAA,UAAU,EAAE;AAAA,gBAAGC,OAAH,SAAGA,OAAH;AAAA,mBAAiB,oBAAC,kBAAD;AAAoB,cAAA,OAAO,EAAEA,OAA7B;AAAsC,cAAA,IAAI,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AAAA;AADL,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAoBE,oBAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,SAAS,EAAEV,UAFb;AAGE,QAAA,OAAO,EAAE;AACPS,UAAAA,UAAU,EAAE;AAAA,gBAAGC,OAAH,SAAGA,OAAH;AAAA,mBAAiB,oBAAC,qBAAD;AAAuB,cAAA,IAAI,EAAE,EAA7B;AAAiC,cAAA,OAAO,EAAEA,OAA1C;AAAmD,cAAA,IAAI,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AAAA;AADL,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,CADJ;AA8BD;;;;EAjCqCjB,KAAK,CAACkB,S;;SAAzBL,U;AAoCrB,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View, Button, SafeAreaView, StatusBar } from 'react-native';\r\nimport Resources from './../config/resources/resources';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport ReaderScreen from '../screens/ReaderScreen';\r\nimport UserScreen from '../screens/UserScreen';\r\nimport MedicationScreen from '../screens/MedicationScreen';\r\nimport TabBarIconFoundation from '../components/TabBarIconFoundation';\r\nimport TabBarIconFontAwesome from '../components/TabBarIconFontAwesome';\r\nimport TabBarIconIonicons from '../components/TabBarIconIonicons';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default class HomeScreen extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n        <Tab.Navigator\r\n          tabBarOptions={{\r\n            activeTintColor: 'white',\r\n            inactiveTintColor: '#72a2d3',\r\n          }}\r\n        >\r\n          <Tab.Screen\r\n            name=\"Medication\"\r\n            component={MedicationScreen}\r\n            options={{\r\n              tabBarIcon: ({ focused }) => <TabBarIconFontAwesome size={24} focused={focused} name=\"ios-pulse\" />,\r\n            }}\r\n          />\r\n          <Tab.Screen\r\n            name=\"Reader\"\r\n            component={ReaderScreen}\r\n            options={{\r\n              tabBarIcon: ({ focused }) => <TabBarIconIonicons focused={focused} name=\"md-wifi\" />,\r\n            }}\r\n          />\r\n          <Tab.Screen\r\n            name=\"Profile\"\r\n            component={UserScreen}\r\n            options={{\r\n              tabBarIcon: ({ focused }) => <TabBarIconFontAwesome size={24} focused={focused} name=\"user\" />,\r\n            }}\r\n          />\r\n        </Tab.Navigator>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}