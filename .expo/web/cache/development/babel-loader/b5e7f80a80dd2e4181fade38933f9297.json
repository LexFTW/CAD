{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/List/ListIcon.tsx\";\n\nvar ListIcon = function (_React$Component) {\n  (0, _inherits2.default)(ListIcon, _React$Component);\n\n  function ListIcon() {\n    (0, _classCallCheck2.default)(this, ListIcon);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListIcon).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(ListIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          iconColor = _this$props.color,\n          style = _this$props.style;\n      return React.createElement(_reactNative.View, {\n        style: [styles.item, style],\n        pointerEvents: \"box-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }, React.createElement(_Icon.default, {\n        source: icon,\n        size: 24,\n        color: iconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }));\n    }\n  }]);\n  return ListIcon;\n}(React.Component);\n\nexports.default = ListIcon;\n(0, _defineProperty2.default)(ListIcon, \"displayName\", 'List.Icon');\n\nvar styles = _reactNative.StyleSheet.create({\n  item: {\n    margin: 8,\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["ListIcon.tsx"],"names":["ListIcon","React","Component","icon","iconColor","style","styles","StyleSheet","item","margin","height","width","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,WAAA,CAAA;;;;AA6BqBA,IAAAA,Q;;;;;;;;;;6BAGV;AAAA,UAAA,WAAA,GACmC,KADnC,KAAA;AAAA,UACCG,IADD,GAAA,WAAA,CAAA,IAAA;AAAA,UACcC,SADd,GAAA,WAAA,CAAA,KAAA;AAAA,UACyBC,KADzB,GAAA,WAAA,CAAA,KAAA;AAGP,aACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAb,KAAa,CAAb;AAAmC,QAAA,aAAa,EAAhD,UAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EACE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA;AAAM,QAAA,MAAM,EAAZ,IAAA;AAAoB,QAAA,IAAI,EAAxB,EAAA;AAA8B,QAAA,KAAK,EAAnC,SAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAFJ;AAEI;AAAA,OAAA,CADF,CADF;;;;EANkCL,KAAK,CAACC,S,CAAvBF;;;8BAAAA,Q,iBACE,W;;AAavB,IAAMM,MAAM,GAAGC,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EADF,CAAA;AAEJC,IAAAA,MAAM,EAFF,EAAA;AAGJC,IAAAA,KAAK,EAHD,EAAA;AAIJC,IAAAA,UAAU,EAJN,QAAA;AAKJC,IAAAA,cAAc,EANlB;AACQ;AADyB,CAAlBN,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show an icon in a list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Icon color={Colors.blue500} icon=\"folder\" />\n * );\n *\n * export default MyComponent;\n * ```\n */\nexport default class ListIcon extends React.Component<Props> {\n  static displayName = 'List.Icon';\n\n  render() {\n    const { icon, color: iconColor, style } = this.props;\n\n    return (\n      <View style={[styles.item, style]} pointerEvents=\"box-none\">\n        <Icon source={icon} size={24} color={iconColor} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    margin: 8,\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}