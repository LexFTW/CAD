{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Typography/Text.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar Text = function (_React$Component) {\n  (0, _inherits2.default)(Text, _React$Component);\n\n  function Text() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Text);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Text)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"root\", void 0);\n    return _this;\n  }\n\n  (0, _createClass2.default)(Text, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(args) {\n      return this.root && this.root.setNativeProps(args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"style\", \"theme\"]);\n      return React.createElement(_reactNative.Text, (0, _extends2.default)({}, rest, {\n        ref: function ref(c) {\n          _this2.root = c;\n        },\n        style: [_objectSpread({}, theme.fonts.regular, {\n          color: theme.colors.text,\n          textAlign: 'left'\n        }), style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }));\n    }\n  }]);\n  return Text;\n}(React.Component);\n\nvar _default = (0, _theming.withTheme)(Text);\n\nexports.default = _default;","map":{"version":3,"sources":["Text.tsx"],"names":["Text","React","Component","args","style","theme","rest","color","textAlign"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,QAAA,GAAA,OAAA,sBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBMA;;AAAAA,IAAAA,I;;;;;;;;;;;;;;;;;;;;;mCAMWG,I,EAAc;AAC3B,aAAO,KAAA,IAAA,IAAa,KAAA,IAAA,CAAA,cAAA,CAApB,IAAoB,CAApB;;;;6BAGO;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAA,WAAA,GAC2B,KAD3B,KAAA;AAAA,UACCC,KADD,GAAA,WAAA,CAAA,KAAA;AAAA,UACQC,KADR,GAAA,WAAA,CAAA,KAAA;AAAA,UACkBC,IADlB,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;AAGP,aACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA;AAEE,QAAA,GAAG,EAAE,SAAA,GAAA,CAAA,CAAA,EAAK;AACR,UAAA,MAAI,CAAJ,IAAA,GAAA,CAAA;AAHJ,SAAA;AAKE,QAAA,KAAK,EAAE,CAAA,aAAA,CAAA,EAAA,EAEAD,KAAK,CAALA,KAAAA,CAFA,OAAA,EAAA;AAGHE,UAAAA,KAAK,EAAEF,KAAK,CAALA,MAAAA,CAHJ,IAAA;AAIHG,UAAAA,SAAS,EAJN;AAAA,SAAA,CAAA,EALT,KAKS,CALT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CAAA,CADF;;;;EAbeP,KAAK,CAACC,S,CAAnBF;;eAgCS,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,IAAA,C","sourcesContent":["import * as React from 'react';\nimport { Text as NativeText, TextStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://facebook.github.io/react-native/docs/text.html#props\n */\nclass Text extends React.Component<Props> {\n  private root: NativeText | undefined | null;\n\n  /**\n   * @internal\n   */\n  setNativeProps(args: Object) {\n    return this.root && this.root.setNativeProps(args);\n  }\n\n  render() {\n    const { style, theme, ...rest } = this.props;\n\n    return (\n      <NativeText\n        {...rest}\n        ref={c => {\n          this.root = c;\n        }}\n        style={[\n          {\n            ...theme.fonts.regular,\n            color: theme.colors.text,\n            textAlign: 'left',\n          },\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nexport default withTheme(Text);\n"]},"metadata":{},"sourceType":"script"}