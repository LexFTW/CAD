{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Typography/AnimatedText.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction AnimatedText(_ref) {\n  var style = _ref.style,\n      theme = _ref.theme,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"style\", \"theme\"]);\n  var writingDirection = _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr';\n  return React.createElement(_reactNative.Animated.Text, (0, _extends2.default)({}, rest, {\n    style: [_objectSpread({}, theme.fonts.regular, {\n      color: theme.colors.text,\n      textAlign: 'left',\n      writingDirection: writingDirection\n    }), style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    }\n  }));\n}\n\nvar _default = (0, _theming.withTheme)(AnimatedText);\n\nexports.default = _default;","map":{"version":3,"sources":["AnimatedText.tsx"],"names":["style","theme","rest","writingDirection","I18nManager","color","textAlign"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,QAAA,GAAA,OAAA,sBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;AAAA,SAAA,YAAA,CAAA,IAAA,EAAwD;AAAhCA,MAAAA,KAAgC,GAAA,IAAA,CAAhCA,KAAAA;AAAAA,MAAOC,KAAyB,GAAA,IAAA,CAAzBA,KAAPD;AAAAA,MAAiBE,IAAe,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAhCF;AACtB,MAAMG,gBAAgB,GAAGC,YAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAAAA,KAAAA,GAAzB,KAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAC,CAAD,IAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE,CAAA,aAAA,CAAA,EAAA,EAEAH,KAAK,CAALA,KAAAA,CAFA,OAAA,EAAA;AAGHI,MAAAA,KAAK,EAAEJ,KAAK,CAALA,MAAAA,CAHJ,IAAA;AAIHK,MAAAA,SAAS,EAJN,MAAA;AAKHH,MAAAA,gBAAgB,EALb;AAAA,KAAA,CAAA,EAFT,KAES,CAFT;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EADF;AACE;AAAA,GAAA,CAAA,CADF;;;eAgBa,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,YAAA,C","sourcesContent":["import * as React from 'react';\nimport { Animated, TextStyle, I18nManager, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Animated.Text> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://facebook.github.io/react-native/docs/text.html#props\n */\nfunction AnimatedText({ style, theme, ...rest }: Props) {\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Animated.Text\n      {...rest}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n          textAlign: 'left',\n          writingDirection,\n        },\n        style,\n      ]}\n    />\n  );\n}\n\nexport default withTheme(AnimatedText);\n"]},"metadata":{},"sourceType":"script"}