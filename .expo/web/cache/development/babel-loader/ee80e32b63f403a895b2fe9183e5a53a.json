{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _ActivityIndicator = _interopRequireDefault(require(\"../ActivityIndicator\"));\n\nvar _FABGroup2 = _interopRequireDefault(require(\"./FABGroup\"));\n\nvar _Surface = _interopRequireDefault(require(\"../Surface\"));\n\nvar _CrossFadeIcon = _interopRequireDefault(require(\"../CrossFadeIcon\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple\"));\n\nvar _colors = require(\"../../styles/colors\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/FAB/FAB.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar FAB = function (_React$Component) {\n  (0, _inherits2.default)(FAB, _React$Component);\n\n  function FAB() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FAB);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(FAB)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      visibility: new _reactNative.Animated.Value(_this.props.visible ? 1 : 0)\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(FAB, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var scale = this.props.theme.animation.scale;\n\n      if (this.props.visible === prevProps.visible) {\n        return;\n      }\n\n      if (this.props.visible) {\n        _reactNative.Animated.timing(this.state.visibility, {\n          toValue: 1,\n          duration: 200 * scale,\n          useNativeDriver: true\n        }).start();\n      } else {\n        _reactNative.Animated.timing(this.state.visibility, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          small = _this$props.small,\n          icon = _this$props.icon,\n          label = _this$props.label,\n          _this$props$accessibi = _this$props.accessibilityLabel,\n          accessibilityLabel = _this$props$accessibi === void 0 ? label : _this$props$accessibi,\n          customColor = _this$props.color,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          visible = _this$props.visible,\n          loading = _this$props.loading,\n          testID = _this$props.testID,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"small\", \"icon\", \"label\", \"accessibilityLabel\", \"color\", \"disabled\", \"onPress\", \"theme\", \"style\", \"visible\", \"loading\", \"testID\"]);\n      var visibility = this.state.visibility;\n      var disabledColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.12).rgb().string();\n\n      var _ref = _reactNative.StyleSheet.flatten(style) || {},\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? disabled ? disabledColor : theme.colors.accent : _ref$backgroundColor;\n\n      var foregroundColor;\n\n      if (typeof customColor !== 'undefined') {\n        foregroundColor = customColor;\n      } else if (disabled) {\n        foregroundColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.32).rgb().string();\n      } else {\n        foregroundColor = !(0, _color.default)(backgroundColor).isLight() ? _colors.white : 'rgba(0, 0, 0, .54)';\n      }\n\n      var rippleColor = (0, _color.default)(foregroundColor).alpha(0.32).rgb().string();\n      return React.createElement(_Surface.default, (0, _extends2.default)({}, rest, {\n        style: [{\n          backgroundColor: backgroundColor,\n          opacity: visibility,\n          transform: [{\n            scale: visibility\n          }]\n        }, styles.container, disabled && styles.disabled, style],\n        pointerEvents: visible ? 'auto' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        }\n      }), React.createElement(_TouchableRipple.default, {\n        borderless: true,\n        onPress: onPress,\n        rippleColor: rippleColor,\n        disabled: disabled,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        accessibilityStates: disabled ? ['disabled'] : [],\n        style: styles.touchable,\n        testID: testID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        }\n      }, React.createElement(_reactNative.View, {\n        style: [styles.content, label ? styles.extended : small ? styles.small : styles.standard],\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        }\n      }, icon && loading !== true ? React.createElement(_CrossFadeIcon.default, {\n        source: icon,\n        size: 24,\n        color: foregroundColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        }\n      }) : null, loading ? React.createElement(_ActivityIndicator.default, {\n        size: 18,\n        color: foregroundColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      }) : null, label ? React.createElement(_Text.default, {\n        style: [styles.label, _objectSpread({\n          color: foregroundColor\n        }, theme.fonts.medium)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        }\n      }, label.toUpperCase()) : null)));\n    }\n  }]);\n  return FAB;\n}(React.Component);\n\n(0, _defineProperty2.default)(FAB, \"Group\", _FABGroup2.default);\n(0, _defineProperty2.default)(FAB, \"defaultProps\", {\n  visible: true\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6\n  },\n  touchable: {\n    borderRadius: 28\n  },\n  standard: {\n    height: 56,\n    width: 56\n  },\n  small: {\n    height: 40,\n    width: 40\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  disabled: {\n    elevation: 0\n  }\n});\n\nvar _default = (0, _theming.withTheme)(FAB);\n\nexports.default = _default;","map":{"version":3,"sources":["FAB.tsx"],"names":["FAB","React","Component","FABGroup","visible","visibility","Animated","prevProps","scale","toValue","duration","useNativeDriver","small","icon","label","accessibilityLabel","customColor","disabled","onPress","theme","style","loading","testID","rest","disabledColor","white","black","backgroundColor","StyleSheet","foregroundColor","rippleColor","opacity","transform","styles","color","container","borderRadius","elevation","touchable","standard","height","width","extended","paddingHorizontal","content","flexDirection","alignItems","justifyContent","marginHorizontal"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { Animated, View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport FABGroup, { FABGroup as _FABGroup } from './FABGroup';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\nimport { IconSource } from './../Icon';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  testID?: string;\n};\n\ntype State = {\n  visibility: Animated.Value;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nclass FAB extends React.Component<Props, State> {\n  // @component ./FABGroup.tsx\n  static Group = FABGroup;\n\n  static defaultProps = {\n    visible: true,\n  };\n\n  state = {\n    visibility: new Animated.Value(this.props.visible ? 1 : 0),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const { scale } = this.props.theme.animation;\n    if (this.props.visible === prevProps.visible) {\n      return;\n    }\n\n    if (this.props.visible) {\n      Animated.timing(this.state.visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(this.state.visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }\n\n  render() {\n    const {\n      small,\n      icon,\n      label,\n      accessibilityLabel = label,\n      color: customColor,\n      disabled,\n      onPress,\n      theme,\n      style,\n      visible,\n      loading,\n      testID,\n      ...rest\n    } = this.props;\n    const { visibility } = this.state;\n\n    const disabledColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n      StyleSheet.flatten(style) || {};\n\n    let foregroundColor;\n\n    if (typeof customColor !== 'undefined') {\n      foregroundColor = customColor;\n    } else if (disabled) {\n      foregroundColor = color(theme.dark ? white : black)\n        .alpha(0.32)\n        .rgb()\n        .string();\n    } else {\n      foregroundColor = !color(backgroundColor).isLight()\n        ? white\n        : 'rgba(0, 0, 0, .54)';\n    }\n\n    const rippleColor = color(foregroundColor)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    return (\n      <Surface\n        {...rest}\n        style={\n          [\n            {\n              backgroundColor,\n              opacity: visibility,\n              transform: [\n                {\n                  scale: visibility,\n                },\n              ],\n            },\n            styles.container,\n            disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityStates={disabled ? ['disabled'] : []}\n          style={styles.touchable}\n          testID={testID}\n        >\n          <View\n            style={[\n              styles.content,\n              label ? styles.extended : small ? styles.small : styles.standard,\n            ]}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <CrossFadeIcon source={icon} size={24} color={foregroundColor} />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator size={18} color={foregroundColor} />\n            ) : null}\n            {label ? (\n              <Text\n                style={[\n                  styles.label,\n                  { color: foregroundColor, ...theme.fonts.medium },\n                ]}\n              >\n                {label.toUpperCase()}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n"]},"metadata":{},"sourceType":"script"}