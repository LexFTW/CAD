{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataTableRow = exports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple\"));\n\nvar _colors = require(\"../../styles/colors\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableRow.tsx\";\n\nvar DataTableRow = function (_React$Component) {\n  (0, _inherits2.default)(DataTableRow, _React$Component);\n\n  function DataTableRow() {\n    (0, _classCallCheck2.default)(this, DataTableRow);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DataTableRow).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(DataTableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"onPress\", \"style\", \"theme\"]);\n      var borderBottomColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.12).rgb().string();\n      return React.createElement(_TouchableRipple.default, (0, _extends2.default)({}, rest, {\n        onPress: onPress,\n        style: [styles.container, {\n          borderBottomColor: borderBottomColor\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }), React.createElement(_reactNative.View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, this.props.children));\n    }\n  }]);\n  return DataTableRow;\n}(React.Component);\n\nexports.DataTableRow = DataTableRow;\n(0, _defineProperty2.default)(DataTableRow, \"displayName\", 'DataTable.Row');\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DataTableRow);\n\nexports.default = _default;","map":{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","React","Component","onPress","style","theme","rest","borderBottomColor","white","black","styles","StyleSheet","container","borderStyle","borderBottomWidth","minHeight","paddingHorizontal","content","flex","flexDirection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,uBAAA;;AACA,IAAA,QAAA,GAAA,OAAA,sBAAA;;;;AAmBMA,IAAAA,Y;;;;;;;;;;6BAGK;AAAA,UAAA,WAAA,GACoC,KADpC,KAAA;AAAA,UACCG,OADD,GAAA,WAAA,CAAA,OAAA;AAAA,UACUC,KADV,GAAA,WAAA,CAAA,KAAA;AAAA,UACiBC,KADjB,GAAA,WAAA,CAAA,KAAA;AAAA,UAC2BC,IAD3B,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;AAEP,UAAMC,iBAAiB,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EAAMF,KAAK,CAALA,IAAAA,GAAaG,OAAAA,CAAbH,KAAAA,GAAqBI,OAAAA,CAA3B,KAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAA1B,MAA0B,EAA1B;AAKA,aACE,KAAA,CAAA,aAAA,CAAC,gBAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA;AAEE,QAAA,OAAO,EAFT,OAAA;AAGE,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAmB;AAAEH,UAAAA,iBAAiB,EAAtC;AAAmB,SAAnB,EAHT,KAGS,CAHT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EAKE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,QAAA,KAAK,EAAEG,MAAM,CAAnB,OAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EAA8B,KAAA,KAAA,CANlC,QAMI,CALF,CADF;;;;EAVuBT,KAAK,CAACC,S,CAA3BF;;;8BAAAA,Y,iBACiB,e;;AAqBvB,IAAMU,MAAM,GAAGC,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EADF,OAAA;AAETC,IAAAA,iBAAiB,EAAEH,YAAAA,CAAAA,UAAAA,CAFV,aAAA;AAGTI,IAAAA,SAAS,EAHA,EAAA;AAITC,IAAAA,iBAAiB,EALY;AACpB,GADoB;AAO/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EADG,CAAA;AAEPC,IAAAA,aAAa,EATjB;AAOW;AAPsB,CAAlBR,CAAf;;eAae,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,YAAA,C","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"script"}