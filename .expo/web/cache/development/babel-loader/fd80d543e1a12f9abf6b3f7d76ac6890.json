{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Git Hub\\\\CAD\\\\screens\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, ActivityIndicator, Colors } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport firebase from \"../config/firebase\";\nimport * as GoogleSignIn from 'expo-google-sign-in';\nimport * as Facebook from 'expo-facebook';\nimport styles from \"../components/TextInputIcon\";\nimport Separator from \"../components/Separator\";\nimport Resources from \"./../config/resources/resources\";\nimport base from \"./../constants/styles/Styles\";\nvar Stack = createStackNavigator();\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: '',\n      error: '',\n      auth: false,\n      showPassword: true\n    };\n    _this.funcSing = _this.signInWithEmail();\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"signInWithEmail\",\n    value: function signInWithEmail() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function signInWithEmail$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(this.onLoginSuccess.bind(this)).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                if (errorCode == 'auth/weak-password') {\n                  _this2.onLoginFailure.bind(_this2)('Weak Password!');\n                } else {\n                  _this2.onLoginFailure.bind(_this2)(errorMessage);\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"signInWithFacebook\",\n    value: function signInWithFacebook() {\n      var _await$Facebook$logIn, type, token, expires, permissions, declinedPermissions, response, message;\n\n      return _regeneratorRuntime.async(function signInWithFacebook$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Facebook.initializeAsync('666200950884855'));\n\n            case 3:\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n                permissions: ['public_profile']\n              }));\n\n            case 5:\n              _await$Facebook$logIn = _context2.sent;\n              type = _await$Facebook$logIn.type;\n              token = _await$Facebook$logIn.token;\n              expires = _await$Facebook$logIn.expires;\n              permissions = _await$Facebook$logIn.permissions;\n              declinedPermissions = _await$Facebook$logIn.declinedPermissions;\n\n              if (!(type === 'success')) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 14;\n              return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?access_token=\" + token));\n\n            case 14:\n              response = _context2.sent;\n              this.onLoginSuccess.bind(this);\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](0);\n              message = _context2.t0.message;\n              this.onLoginFailure.bind(this)(message);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 18]], Promise);\n    }\n  }, {\n    key: \"onLoginFailure\",\n    value: function onLoginFailure(errorMessage) {\n      this.setState({\n        error: errorMessage,\n        auth: false\n      });\n      Alert.alert(errorMessage);\n    }\n  }, {\n    key: \"onLoginSuccess\",\n    value: function onLoginSuccess() {\n      this.props.navigation.navigate('Home');\n    }\n  }, {\n    key: \"showPasswordInTheInput\",\n    value: function showPasswordInTheInput() {\n      if (this.state.showPassword) {\n        this.setState({\n          showPassword: false\n        });\n      } else {\n        this.setState({\n          showPassword: true\n        });\n      }\n    }\n  }, {\n    key: \"renderCurrentState\",\n    value: function renderCurrentState() {\n      var _this3 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this3.props.navigation.navigate('Home');\n        }\n      });\n\n      if (this.state.auth) {\n        this.props.navigation.navigate('Home');\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 12\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/images/splash.png\"),\n        style: {\n          width: 250,\n          height: 200,\n          marginBottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, React.createElement(Icon, {\n        name: 'user',\n        size: 28,\n        style: styles.inputIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        placeholder: Resources.LOGIN_EMAIL,\n        placeholderTextColor: \"#adadad\",\n        underlineColorAndroid: \"transparent\",\n        textContentType: 'emailAddress',\n        secureTextEntry: false,\n        style: styles.input,\n        value: this.state.email,\n        onChangeText: function onChangeText(email) {\n          return _this3.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, React.createElement(Icon, {\n        name: 'lock',\n        size: 28,\n        style: styles.inputIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        placeholder: Resources.LOGIN_PASSWORD,\n        placeholderTextColor: \"#adadad\",\n        underlineColorAndroid: \"transparent\",\n        textContentType: 'none',\n        secureTextEntry: this.state.showPassword,\n        showPassword: false,\n        style: styles.input,\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        icon: \"eye\",\n        mode: \"contained\",\n        style: styles.inputIconRight,\n        labelStyle: {\n          marginRight: 0\n        },\n        onPress: function onPress() {\n          return _this3.showPasswordInTheInput(_this3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      })), React.createElement(Separator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      }), React.createElement(Button, {\n        mode: \"contained\",\n        style: {\n          backgroundColor: '#2069b2',\n          borderRadius: 0,\n          marginBottom: 5\n        },\n        onPress: function onPress() {\n          return _this3.signInWithEmail();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, Resources.LOGIN_SIGNIN), React.createElement(Button, {\n        icon: \"google\",\n        mode: \"contained\",\n        style: {\n          backgroundColor: '#DB4437',\n          borderRadius: 0,\n          marginBottom: 5\n        },\n        onPress: function onPress() {\n          return _this3.signInWithGoogle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, Resources.LOGIN_SIGNIN_GOOGLE), React.createElement(Button, {\n        icon: \"facebook\",\n        mode: \"contained\",\n        style: {\n          backgroundColor: '#3b5998',\n          borderRadius: 0\n        },\n        onPress: function onPress() {\n          return _this3.signInWithFacebook();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, Resources.LOGIN_SIGNIN_FACEBOOK), React.createElement(Separator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }\n      }), React.createElement(Button, {\n        mode: \"contained\",\n        style: {\n          backgroundColor: '#2069b2',\n          borderRadius: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, Resources.LOGIN_REGISTER));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: base.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }, this.renderCurrentState());\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["C:/Users/David/Desktop/Git Hub/CAD/screens/LoginScreen.js"],"names":["React","Component","Button","ActivityIndicator","Colors","Icon","createStackNavigator","firebase","GoogleSignIn","Facebook","styles","Separator","Resources","base","Stack","LoginScreen","props","state","email","password","error","auth","showPassword","funcSing","signInWithEmail","signInWithEmailAndPassword","then","onLoginSuccess","bind","catch","errorCode","code","errorMessage","message","onLoginFailure","initializeAsync","logInWithReadPermissionsAsync","permissions","type","token","expires","declinedPermissions","fetch","response","setState","Alert","alert","navigation","navigate","onAuthStateChanged","user","require","width","height","marginBottom","inputIcon","LOGIN_EMAIL","input","LOGIN_PASSWORD","inputIconRight","marginRight","showPasswordInTheInput","backgroundColor","borderRadius","LOGIN_SIGNIN","signInWithGoogle","LOGIN_SIGNIN_GOOGLE","signInWithFacebook","LOGIN_SIGNIN_FACEBOOK","LOGIN_REGISTER","container","renderCurrentState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { View, Image, Text, StyleSheet, TextInput, SafeAreaView, NativeModules, Platform, Alert } from 'react-native';\r\nimport { Button, ActivityIndicator, Colors } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport firebase from '../config/firebase';\r\nimport * as GoogleSignIn from 'expo-google-sign-in'\r\nimport * as Facebook from 'expo-facebook';\r\n\r\nimport styles from '../components/TextInputIcon';\r\nimport Separator from '../components/Separator';\r\nimport Resources from './../config/resources/resources';\r\n\r\nimport base from './../constants/styles/Styles';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default class LoginScreen extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {email: '', password: '', error: '', auth: false, showPassword: true }\r\n    this.funcSing = this.signInWithEmail();\r\n  }\r\n\r\n  async signInWithEmail() {\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(this.onLoginSuccess.bind(this))\r\n      .catch(error => {\r\n          let errorCode = error.code;\r\n          let errorMessage = error.message;\r\n          if (errorCode == 'auth/weak-password') {\r\n              this.onLoginFailure.bind(this)('Weak Password!');\r\n          } else {\r\n              this.onLoginFailure.bind(this)(errorMessage);\r\n          }\r\n      });\r\n  }\r\n\r\n  async signInWithFacebook() {\r\n    try {\r\n      await Facebook.initializeAsync('666200950884855');\r\n      const {\r\n        type,\r\n        token,\r\n        expires,\r\n        permissions,\r\n        declinedPermissions,\r\n      } = await Facebook.logInWithReadPermissionsAsync({\r\n        permissions: ['public_profile'],\r\n      });\r\n      if (type === 'success') {\r\n        const response = await fetch(`https://graph.facebook.com/me?access_token=${token}`);\r\n        this.onLoginSuccess.bind(this)\r\n      }\r\n    } catch ({ message }) {\r\n      this.onLoginFailure.bind(this)(message);\r\n    }\r\n  }\r\n\r\n  onLoginFailure(errorMessage) {\r\n    this.setState({ error: errorMessage, auth: false });\r\n    Alert.alert(errorMessage);\r\n  }\r\n\r\n  onLoginSuccess() {\r\n    this.props.navigation.navigate('Home')\r\n  }\r\n\r\n  showPasswordInTheInput(){\r\n    if(this.state.showPassword){\r\n      this.setState({showPassword: false})\r\n    }else{\r\n      this.setState({showPassword: true})\r\n    }\r\n  }\r\n\r\n  renderCurrentState(){\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          this.props.navigation.navigate('Home');\r\n        }\r\n     });\r\n\r\n    if(this.state.auth){\r\n        this.props.navigation.navigate('Home');\r\n    }\r\n\r\n    return <View>\r\n      <Image source={require('../assets/images/splash.png')} style={{width: 250, height: 200, marginBottom: 15}} />\r\n\r\n      <View>\r\n        <Icon name={'user'} size={28} style={styles.inputIcon}/>\r\n        <TextInput\r\n          placeholder={Resources.LOGIN_EMAIL}\r\n          placeholderTextColor=\"#adadad\"\r\n          underlineColorAndroid='transparent'\r\n          textContentType={'emailAddress'}\r\n          secureTextEntry={false}\r\n          style={styles.input}\r\n          value={this.state.email}\r\n          onChangeText={email => this.setState({ email })}\r\n        />\r\n      </View>\r\n      <View>\r\n        <Icon name={'lock'} size={28} style={styles.inputIcon}/>\r\n        <TextInput\r\n          placeholder={Resources.LOGIN_PASSWORD}\r\n          placeholderTextColor=\"#adadad\"\r\n          underlineColorAndroid='transparent'\r\n          textContentType={'none'}\r\n          secureTextEntry={this.state.showPassword}\r\n          showPassword={false}\r\n          style={styles.input}\r\n          value={this.state.password}\r\n          onChangeText={password => this.setState({ password })}\r\n        />\r\n        <Button\r\n          icon=\"eye\"\r\n          mode=\"contained\"\r\n          style={styles.inputIconRight}\r\n          labelStyle={{marginRight: 0}}\r\n          onPress={() => this.showPasswordInTheInput(this)}\r\n        />\r\n      </View>\r\n      <Separator />\r\n      <Button\r\n        mode=\"contained\"\r\n        style={{backgroundColor: '#2069b2', borderRadius: 0, marginBottom: 5}}\r\n        onPress={() => this.signInWithEmail()}\r\n      >\r\n        {Resources.LOGIN_SIGNIN}\r\n      </Button>\r\n      <Button\r\n        icon=\"google\"\r\n        mode=\"contained\"\r\n        style={{backgroundColor: '#DB4437', borderRadius: 0, marginBottom: 5}}\r\n        onPress={() => this.signInWithGoogle()}\r\n        >\r\n          {Resources.LOGIN_SIGNIN_GOOGLE}\r\n      </Button>\r\n      <Button\r\n        icon=\"facebook\"\r\n        mode=\"contained\"\r\n        style={{backgroundColor: '#3b5998', borderRadius: 0}}\r\n        onPress={() => this.signInWithFacebook()}\r\n        >\r\n          {Resources.LOGIN_SIGNIN_FACEBOOK}\r\n      </Button>\r\n      <Separator />\r\n      <Button mode=\"contained\" style={{backgroundColor: '#2069b2', borderRadius: 0,}}>\r\n        {Resources.LOGIN_REGISTER}\r\n      </Button>\r\n    </View>\r\n\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <SafeAreaView style={base.container}>\r\n        {this.renderCurrentState()}\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}